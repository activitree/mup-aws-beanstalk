{"version":3,"sources":["../src/eb-config.js"],"names":["difference","names","createDesiredConfig","mupConfig","settings","longEnvVarsVersion","env","instanceType","customBeanstalkConfig","app","instanceProfile","serviceRole","config","OptionSettings","Namespace","OptionName","Value","settingsString","JSON","stringify","push","toString","METEOR_SETTINGS_ENCODED","encodeURIComponent","Object","keys","forEach","envName","value","customOptions","map","option","namespace","mergeConfigs","scalingConfigChanged","currentConfig","minInstances","maxInstances","currentMinInstances","currentMaxInstances","item","scalingConfig","convertToObject","result","config1","config2","reduce","key","values","diffConfig","current","desired","toRemove","filter","indexOf","toUpdate"],"mappings":"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","sourcesContent":["import { difference } from 'lodash';\nimport { names } from './utils';\n\nexport function createDesiredConfig(mupConfig, settings, longEnvVarsVersion) {\n  const {\n    env,\n    instanceType,\n    customBeanstalkConfig = []\n  } = mupConfig.app;\n  const {\n    instanceProfile,\n    serviceRole\n  } = names(mupConfig);\n\n  const config = {\n    OptionSettings: [{\n      Namespace: 'aws:autoscaling:trigger',\n      OptionName: 'MeasureName',\n      Value: 'CPUUtilization'\n    }, {\n      Namespace: 'aws:autoscaling:trigger',\n      OptionName: 'Statistic',\n      Value: 'Average'\n    }, {\n      Namespace: 'aws:autoscaling:trigger',\n      OptionName: 'Unit',\n      Value: 'Percent'\n    }, {\n      Namespace: 'aws:autoscaling:trigger',\n      OptionName: 'UpperThreshold',\n      Value: '75'\n    }, {\n      Namespace: 'aws:autoscaling:trigger',\n      OptionName: 'LowerThreshold',\n      Value: '35'\n    }, {\n      Namespace: 'aws:autoscaling:launchconfiguration',\n      OptionName: 'InstanceType',\n      Value: instanceType\n    }, {\n      Namespace: 'aws:autoscaling:launchconfiguration',\n      OptionName: 'IamInstanceProfile',\n      Value: instanceProfile\n    }, {\n      Namespace: 'aws:elasticbeanstalk:environment:process:default',\n      OptionName: 'HealthyThresholdCount',\n      Value: '2'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:environment:process:default',\n      OptionName: 'HealthCheckPath',\n      Value: '/aws-health-check-3984729847289743128904723'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:environment',\n      OptionName: 'EnvironmentType',\n      Value: 'LoadBalanced'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:environment',\n      OptionName: 'LoadBalancerType',\n      Value: 'application'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:command',\n      OptionName: 'DeploymentPolicy',\n      Value: 'RollingWithAdditionalBatch'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:command',\n      OptionName: 'BatchSizeType',\n      Value: 'Percentage'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:command',\n      OptionName: 'BatchSize',\n      Value: '30'\n    }, {\n      Namespace: 'aws:autoscaling:updatepolicy:rollingupdate',\n      OptionName: 'RollingUpdateEnabled',\n      Value: 'true'\n    }, {\n      Namespace: 'aws:autoscaling:updatepolicy:rollingupdate',\n      OptionName: 'RollingUpdateType',\n      Value: 'Health'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:environment',\n      OptionName: 'ServiceRole',\n      Value: serviceRole\n    }, {\n      Namespace: 'aws:elasticbeanstalk:healthreporting:system',\n      OptionName: 'SystemType',\n      Value: 'enhanced'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:environment:process:default',\n      OptionName: 'StickinessEnabled',\n      Value: 'true'\n    }, {\n      Namespace: 'aws:elasticbeanstalk:environment:process:default',\n      OptionName: 'DeregistrationDelay',\n      Value: '75'\n    }]\n  };\n\n  const settingsString = JSON.stringify(settings);\n\n  if (longEnvVarsVersion) {\n    config.OptionSettings.push({\n      Namespace: 'aws:elasticbeanstalk:application:environment',\n      OptionName: 'MUP_ENV_FILE_VERSION',\n      Value: longEnvVarsVersion.toString()\n    });\n  } else {\n    env.METEOR_SETTINGS_ENCODED = encodeURIComponent(settingsString);\n\n    Object.keys(env).forEach((envName) => {\n      const value = env[envName];\n\n      config.OptionSettings.push({\n        Namespace: 'aws:elasticbeanstalk:application:environment',\n        OptionName: envName,\n        Value: value.toString()\n      });\n    });\n  }\n\n  const customOptions = customBeanstalkConfig.map(option => ({\n    Namespace: option.namespace,\n    OptionName: option.option,\n    Value: option.value\n  }));\n\n  config.OptionSettings = mergeConfigs(config.OptionSettings, customOptions);\n\n  return config;\n}\n\nexport function scalingConfigChanged(currentConfig, mupConfig) {\n  const {\n    minInstances,\n    maxInstances\n  } = mupConfig.app;\n\n  let currentMinInstances = 0;\n  let currentMaxInstances = 0;\n\n  currentConfig.forEach((item) => {\n    if (item.Namespace === 'aws:autoscaling:asg') {\n      if (item.OptionName === 'MinSize') {\n        currentMinInstances = item.Value;\n      } else if (item.OptionName === 'MaxSize') {\n        currentMaxInstances = item.Value;\n      }\n    }\n  });\n\n  return currentMinInstances !== minInstances.toString() ||\n    currentMaxInstances !== maxInstances.toString();\n}\n\nexport function scalingConfig({ minInstances, maxInstances }) {\n  return {\n    OptionSettings: [\n      {\n        Namespace: 'aws:autoscaling:asg',\n        OptionName: 'MinSize',\n        Value: minInstances.toString()\n      }, {\n        Namespace: 'aws:autoscaling:asg',\n        OptionName: 'MaxSize',\n        Value: maxInstances.toString()\n      }\n    ]\n  };\n}\n\nexport function convertToObject(result, option) {\n  result[`${option.Namespace}-${option.OptionName}`] = option;\n\n  return result;\n}\n\nexport function mergeConfigs(config1, config2) {\n  config1 = config1.reduce(convertToObject, {});\n\n  config2.forEach((option) => {\n    const key = [`${option.Namespace}-${option.OptionName}`];\n    config1[key] = option;\n  });\n\n  return Object.values(config1);\n}\n\nexport function diffConfig(current, desired) {\n  current = current.reduce(convertToObject, {});\n\n  desired = desired.reduce(convertToObject, {});\n\n  const toRemove = difference(Object.keys(current), Object.keys(desired))\n    .filter(key => key.indexOf('aws:elasticbeanstalk:application:environment-') === 0)\n    .map((key) => {\n      const option = current[key];\n      return {\n        Namespace: option.Namespace,\n        OptionName: option.OptionName\n      };\n    });\n\n  const toUpdate = Object.keys(desired).filter((key) => {\n    if (key in current && current[key].Value === desired[key].Value) {\n      return false;\n    }\n\n    return true;\n  }).map(key => desired[key]);\n\n  return {\n    toRemove,\n    toUpdate\n  };\n}\n"],"file":"eb-config.js"}