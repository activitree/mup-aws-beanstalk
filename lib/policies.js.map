{"version":3,"sources":["../src/policies.js"],"names":["trailBucketPolicy","accountId","bucketName","policy","Version","Statement","Sid","Effect","Principal","Service","Action","Resource","Condition","StringEquals","JSON","stringify","rolePolicy","serviceRole","eventTargetRole","passRolePolicy","role","eventTargetRolePolicy","env","region","StringLike","DeregisterEvent","deregisterEventTarget","envName","Id","Arn","RoleArn","InputTransformer","InputPathsMap","instance","InputTemplate","gracefulShutdownAutomationDocument","document","description","schemaVersion","assumeRole","parameters","InstanceId","type","AutomationAssumeRole","default","Commands","ServiceRole","mainSteps","name","action","inputs","DocumentName","InstanceIds","ServiceRoleArn","Parameters","commands"],"mappings":"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","sourcesContent":["export function trailBucketPolicy(accountId, bucketName) {\n  const policy = {\n    Version: '2012-10-17',\n    Statement: [{\n      Sid: 'AWSCloudTrailAclCheck20150319',\n      Effect: 'Allow',\n      Principal: {\n        Service: 'cloudtrail.amazonaws.com'\n      },\n      Action: 's3:GetBucketAcl',\n      Resource: `arn:aws:s3:::${bucketName}`\n    },\n    {\n      Sid: 'AWSCloudTrailWrite20150319',\n      Effect: 'Allow',\n      Principal: {\n        Service: 'cloudtrail.amazonaws.com'\n      },\n      Action: 's3:PutObject',\n      Resource: `arn:aws:s3:::${bucketName}/AWSLogs/${accountId}/*`,\n      Condition: {\n        StringEquals: {\n          's3:x-amz-acl': 'bucket-owner-full-control'\n        }\n      }\n    }\n    ]\n  };\n\n  return JSON.stringify(policy);\n}\n\nexport const rolePolicy = '{ \"Version\": \"2008-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"ec2.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" } ] }';\nexport const serviceRole = '{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"elasticbeanstalk.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\", \"Condition\": { \"StringEquals\": { \"sts:ExternalId\": \"elasticbeanstalk\" } } } ] }';\nexport const eventTargetRole = '{ \"Version\": \"2012-10-17\", \"Statement\": [{ \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"events.amazonaws.com\" }, \"Action\": \"sts:AssumeRole\" }, { \"Effect\": \"Allow\", \"Principal\": { \"Service\": [ \"ssm.amazonaws.com\", \"ec2.amazonaws.com\" ] }, \"Action\": \"sts:AssumeRole\" } ] }';\nexport const passRolePolicy = (accountId, role) => {\n  const policy = {\n    Version: '2012-10-17',\n    Statement: [\n      {\n        Effect: 'Allow',\n        Action: 'iam:PassRole',\n        Resource: `arn:aws:iam::${accountId}:role/${role}`\n      }\n    ]\n  };\n\n  return JSON.stringify(policy);\n};\n\nexport function eventTargetRolePolicy(accountId, env, region) {\n  const policy = {\n    Version: '2012-10-17',\n    Statement: [\n      {\n        Action: 'ssm:SendCommand',\n        Effect: 'Allow',\n        Resource: `arn:aws:ec2:${region}:${accountId}:instance/*`,\n        Condition: {\n          StringLike: {\n            'ssm:resourceTag/elasticbeanstalk:environment-name': [\n              env\n            ]\n          }\n        }\n      },\n      {\n        Action: 'ssm:SendCommand',\n        Effect: 'Allow',\n        Resource: `arn:aws:ssm:${region}:*:document/AWS-RunShellScript`\n      },\n      {\n        Action: [\n          'ssm:StartAutomationExecution',\n          'ssm:DescribeInstanceInformation',\n          'ssm:ListCommands',\n          'ssm:ListCommandInvocations'\n        ],\n        Effect: 'Allow',\n        Resource: [\n          '*'\n        ]\n      }\n    ]\n  };\n\n  return JSON.stringify(policy);\n}\n\nexport const DeregisterEvent = '{ \"source\": [ \"aws.elasticloadbalancing\" ], \"detail-type\": [ \"AWS API Call via CloudTrail\" ], \"detail\": { \"eventSource\": [ \"elasticloadbalancing.amazonaws.com\" ], \"eventName\": [ \"DeregisterTargets\" ] } }';\n\nexport const deregisterEventTarget = (envName, role, accountId, region) => ({\n  Id: `mup-target-${envName}`,\n  Arn: `arn:aws:ssm:${region}:${accountId}:automation-definition/mup-graceful-shutdown:$LATEST`,\n  RoleArn: `arn:aws:iam::${accountId}:role/${role}`,\n  InputTransformer: {\n    InputPathsMap: {\n      instance: '$.detail.requestParameters.targets[0].id'\n    },\n    InputTemplate: `{\"InstanceId\":[<instance>], \"AutomationAssumeRole\": [\"arn:aws:iam::${accountId}:role/${role}\"], \"ServiceRole\": [\"arn:aws:iam::${accountId}:role/${role}\"], \"Commands\": [\"cd /mup_graceful_shutdown || exit 1\", \"ls\", \"PATH='/mup_graceful_shutdown'\", <instance>]}`\n  }\n});\n\nexport const gracefulShutdownAutomationDocument = () => {\n  const document = {\n    description: 'Automation document for mup-aws-beanstalk graceful shutdown',\n    schemaVersion: '0.3',\n    assumeRole: '{{ AutomationAssumeRole }}',\n    parameters: {\n      InstanceId: {\n        type: 'StringList',\n        description: '(Required) EC2 Instance(s) to run the command on'\n      },\n      AutomationAssumeRole: {\n        type: 'String',\n        description: '(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.',\n        default: ''\n      },\n      Commands: {\n        type: 'StringList',\n        description: 'Commands to run'\n      },\n      ServiceRole: {\n        type: 'String',\n        description: 'The ARN of the role for runCommand'\n      }\n    },\n    mainSteps: [\n      {\n        name: 'runCommand',\n        action: 'aws:runCommand',\n        inputs: {\n          DocumentName: 'AWS-RunShellScript',\n          InstanceIds: '{{ InstanceId }}',\n          ServiceRoleArn: '{{ ServiceRole }}',\n          Parameters: {\n            commands: '{{ Commands }}'\n          }\n        }\n      }\n    ]\n  };\n\n  return JSON.stringify(document);\n};\n"],"file":"policies.js"}