{"version":3,"sources":["../src/command-handlers.js"],"names":["chalk","acm","s3","beanstalk","autoScaling","cloudTrail","updateSSLConfig","rolePolicy","trailBucketPolicy","DeregisterEvent","deregisterEventTarget","serviceRole","eventTargetRolePolicy","eventTargetRole","gracefulShutdownAutomationDocument","passRolePolicy","upload","uploadEnvFile","archiveApp","injectFiles","coloredStatusText","ensureBucketExists","ensureInstanceProfileExists","ensureRoleExists","ensureRoleAdded","ensurePoliciesAttached","ensureBucketPolicyAttached","getAccountId","getLogs","logStep","names","tmpBuildPath","shouldRebuild","ensureCloudWatchRule","ensureRuleTargetExists","ensureInlinePolicyAttached","findBucketWithPrefix","createUniqueName","checkLongEnvSafe","createVersionDescription","ensureSsmDocument","largestVersion","largestEnvVersion","ebVersions","oldVersions","oldEnvVersions","createDesiredConfig","diffConfig","scalingConfig","scalingConfigChanged","waitForEnvReady","waitForHealth","setup","api","config","getConfig","appConfig","app","bucket","bucketName","appName","instanceProfile","serviceRoleName","trailBucketPrefix","trailName","deregisterRuleName","environment","environmentName","eventTargetRoleName","eventTargetPolicyName","eventTargetPassRoleName","automationDocument","Buckets","listBuckets","promise","beanstalkBucketCreated","region","console","log","gracefulShutdown","accountId","policy","passPolicy","Applications","describeApplications","find","ApplicationName","params","Description","name","SolutionStackName","createApplication","existingBucket","trailBucketName","Name","trailBucketCreated","trailNameList","trailList","describeTrails","length","createParams","S3BucketName","createTrail","createdDocument","createdRule","target","createdTarget","deploy","runCommand","bundlePrefix","version","nextVersion","buildOptions","buildLocation","path","bundlePath","resolvePath","willBuild","getOptions","key","createApplicationVersion","VersionLabel","toString","SourceBundle","S3Bucket","S3Key","updateEnvironment","EnvironmentName","Environments","describeEnvironments","EnvironmentNames","green","CNAME","longEnvVars","ConfigurationSettings","describeConfigurationSettings","migrated","commandHistory","logs","logsContent","forEach","data","instance","split","process","stdout","write","logsNginx","logsEb","start","EnvironmentResources","describeEnvironmentResources","autoScalingGroup","AutoScalingGroups","minInstances","maxInstances","updateAutoScalingGroup","AutoScalingGroupName","MaxSize","MinSize","DesiredCapacity","stop","restart","restartAppServer","clean","versions","envVersions","promises","i","push","deleteApplicationVersion","DeleteSourceBundle","deleteObject","Bucket","Key","Promise","all","reconfig","env","Status","desiredEbConfig","getSettings","SolutionStacks","listAvailableSolutionStacks","solutionStack","endsWith","createEnvironment","OptionSettings","enabled","longEnvEnabled","safeToReconfig","nextEnvVersion","currentEnvVersion","toRemove","toUpdate","OptionsToRemove","events","Events","envEvents","describeEvents","map","ev","EventDate","Message","join","status","result","describeEnvironmentHealth","AttributeNames","InstanceHealthList","describeInstancesHealth","RequestCount","Duration","StatusCodes","Latency","ApplicationMetrics","Color","HealthStatus","Causes","cause","Status2xx","Status3xx","Status4xx","Status5xx","P999","P99","P95","P90","P85","P75","P50","P10","InstanceId","ssl","sslDomains","domains","CertificateSummaryList","listCertificates","found","DomainName","CertificateArn","Certificate","describeCertificate","SubjectAlternativeNames","certificateArn","requestCertificate","shift","emailsProvided","checks","certificate","validationOptions","DomainValidationOptions","ValidationEmails","resolve","setTimeout","ValidationDomain","ValidationStatus","yellow","email"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,EAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,OANP;AAOA,OAAOC,eAAP,MAA4B,gBAA5B;AACA,SACEC,UADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,qBAJF,EAKEC,WALF,EAMEC,qBANF,EAOEC,eAPF,EAQEC,kCARF,EASEC,cATF,QAUO,YAVP;AAWA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,UAAtC;AACA,SACEC,UADF,EAEEC,WAFF,QAGO,kBAHP;AAIA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,2BAHF,EAIEC,gBAJF,EAKEC,eALF,EAMEC,sBANF,EAOEC,0BAPF,EAQEC,YARF,EASEC,OATF,EAUEC,OAVF,EAWEC,KAXF,EAYEC,YAZF,EAaEC,aAbF,EAcEC,oBAdF,EAeEC,sBAfF,EAgBEC,0BAhBF,EAiBEC,oBAjBF,EAkBEC,gBAlBF,EAmBEC,gBAnBF,EAoBEC,wBApBF,EAqBEC,iBArBF,QAsBO,SAtBP;AAuBA,SACEC,cADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,cALF,QAMO,YANP;AAQA,SACEC,mBADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,oBAJF,QAKO,aALP;AAOA,SACEC,eADF,EAEEC,aAFF,QAGO,aAHP;AAKA,OAAO,eAAeC,KAAf,CAAqBC,GAArB,EAA0B;AAC/B,QAAMC,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;AACA,QAAMC,SAAS,GAAGF,MAAM,CAACG,GAAzB;AAEA,QAAM;AACJC,IAAAA,MAAM,EAAEC,UADJ;AAEJF,IAAAA,GAAG,EAAEG,OAFD;AAGJC,IAAAA,eAHI;AAIJlD,IAAAA,WAAW,EAAEmD,eAJT;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,kBAPI;AAQJC,IAAAA,WAAW,EAAEC,eART;AASJtD,IAAAA,eAAe,EAAEuD,mBATb;AAUJC,IAAAA,qBAVI;AAWJC,IAAAA,uBAXI;AAYJC,IAAAA;AAZI,MAaFzC,KAAK,CAACwB,MAAD,CAbT;AAeAzB,EAAAA,OAAO,CAAC,eAAD,CAAP,CAnB+B,CAqB/B;;AACA,QAAM;AACJ2C,IAAAA;AADI,MAEF,MAAMtE,EAAE,CAACuE,WAAH,GAAiBC,OAAjB,EAFV;AAIA,QAAMC,sBAAsB,GAAG,MAAMtD,kBAAkB,CAACmD,OAAD,EAAUb,UAAV,EAAsBH,SAAS,CAACoB,MAAhC,CAAvD;;AAEA,MAAID,sBAAJ,EAA4B;AAC1BE,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAEDjD,EAAAA,OAAO,CAAC,uDAAD,CAAP,CAhC+B,CAkC/B;;AACA,QAAMN,gBAAgB,CAACsC,eAAD,EAAkBtD,UAAlB,CAAtB;AACA,QAAMe,2BAA2B,CAACgC,MAAD,EAASO,eAAT,CAAjC;AACA,QAAMpC,sBAAsB,CAAC6B,MAAD,EAASO,eAAT,EAA0B,CACpD,oDADoD,EAEpD,iEAFoD,EAGpD,uDAHoD,EAIpD,IAAGL,SAAS,CAACuB,gBAAV,GAA6B,CAAC,0DAAD,CAA7B,GAA4F,EAA/F,CAJoD,CAA1B,CAA5B;AAMA,QAAMvD,eAAe,CAAC8B,MAAD,EAASO,eAAT,EAA0BA,eAA1B,CAArB,CA3C+B,CA6C/B;;AACA,QAAMtC,gBAAgB,CAACuC,eAAD,EAAkBnD,WAAlB,CAAtB;AACA,QAAMc,sBAAsB,CAAC6B,MAAD,EAASQ,eAAT,EAA0B,CACpD,wEADoD,EAEpD,iEAFoD,CAA1B,CAA5B;;AAKA,MAAIN,SAAS,CAACuB,gBAAd,EAAgC;AAC9B,UAAMC,SAAS,GAAG,MAAMrD,YAAY,EAApC;AACA,UAAMsD,MAAM,GAAGrE,qBAAqB,CAACoE,SAAD,EAAYb,eAAZ,EAA6BX,SAAS,CAACoB,MAAV,IAAoB,WAAjD,CAApC;AACA,UAAMM,UAAU,GAAGnE,cAAc,CAACiE,SAAD,EAAYZ,mBAAZ,CAAjC;AAEA,UAAM7C,gBAAgB,CAAC6C,mBAAD,EAAsBvD,eAAtB,EAAuC,IAAvC,CAAtB;AACA,UAAMsB,0BAA0B,CAACiC,mBAAD,EAAsBC,qBAAtB,EAA6CY,MAA7C,CAAhC;AACA,UAAM9C,0BAA0B,CAACiC,mBAAD,EAAsBE,uBAAtB,EAA+CY,UAA/C,CAAhC;AACD,GA5D8B,CA8D/B;;;AACA,QAAM;AACJC,IAAAA;AADI,MAEF,MAAMhF,SAAS,CAACiF,oBAAV,GAAiCV,OAAjC,EAFV;;AAIA,MAAI,CAACS,YAAY,CAACE,IAAb,CAAkB5B,GAAG,IAAIA,GAAG,CAAC6B,eAAJ,KAAwB1B,OAAjD,CAAL,EAAgE;AAC9D,UAAM2B,MAAM,GAAG;AACbD,MAAAA,eAAe,EAAE1B,OADJ;AAEb4B,MAAAA,WAAW,EAAG,QAAOhC,SAAS,CAACiC,IAAK,wBAFvB;AAGbC,MAAAA,iBAAiB,EAAE;AAHN,KAAf;AAMA,UAAMvF,SAAS,CAACwF,iBAAV,CAA4BJ,MAA5B,EAAoCb,OAApC,EAAN;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;;AAED,MAAItB,SAAS,CAACuB,gBAAd,EAAgC;AAC9BlD,IAAAA,OAAO,CAAC,wCAAD,CAAP;AAEA,UAAM+D,cAAc,GAAGxD,oBAAoB,CAACoC,OAAD,EAAUT,iBAAV,CAA3C;AACA,UAAM8B,eAAe,GAAGD,cAAc,GACpCA,cAAc,CAACE,IADqB,GAEpCzD,gBAAgB,CAAC0B,iBAAD,CAFlB;AAGA,UAAMa,MAAM,GAAGpB,SAAS,CAACoB,MAAV,IAAoB,WAAnC;AACA,UAAMI,SAAS,GAAG,MAAMrD,YAAY,EAApC;AACA,UAAMsD,MAAM,GAAGzE,iBAAiB,CAACwE,SAAD,EAAYa,eAAZ,CAAhC;AAEA,UAAME,kBAAkB,GAAG,MAAM1E,kBAAkB,CAACmD,OAAD,EAAUqB,eAAV,EAA2BrC,SAAS,CAACoB,MAArC,CAAnD;AACA,UAAMlD,0BAA0B,CAACmE,eAAD,EAAkBZ,MAAlB,CAAhC;;AAEA,QAAIc,kBAAJ,EAAwB;AACtBlB,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;;AAED,UAAMS,MAAM,GAAG;AACbS,MAAAA,aAAa,EAAE,CACbhC,SADa;AADF,KAAf;AAMA,UAAM;AACJiC,MAAAA;AADI,QAEF,MAAM5F,UAAU,CAAC6F,cAAX,CAA0BX,MAA1B,EAAkCb,OAAlC,EAFV;;AAIA,QAAIuB,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,YAAMC,YAAY,GAAG;AACnBN,QAAAA,IAAI,EAAE9B,SADa;AAEnBqC,QAAAA,YAAY,EAAER;AAFK,OAArB;AAKA,YAAMxF,UAAU,CAACiG,WAAX,CAAuBF,YAAvB,EAAqC1B,OAArC,EAAN;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AAED,UAAMyB,eAAe,GAAG,MAAM/D,iBAAiB,CAC7C+B,kBAD6C,EAE7CzD,kCAAkC,EAFW,CAA/C;;AAIA,QAAIyF,eAAJ,EAAqB;AACnB1B,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD;;AAED,UAAM0B,WAAW,GAAG,MAAMvE,oBAAoB,CAACgC,kBAAD,EAAqB,yCAArB,EAAgExD,eAAhE,CAA9C;;AAEA,QAAI+F,WAAJ,EAAiB;AACf3B,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AAED,UAAM2B,MAAM,GAAG/F,qBAAqB,CAACyD,eAAD,EAAkBC,mBAAlB,EAAuCY,SAAvC,EAAkDJ,MAAlD,CAApC;AACA,UAAM8B,aAAa,GAAG,MAAMxE,sBAAsB,CAAC+B,kBAAD,EAAqBwC,MAArB,EAA6BzB,SAA7B,CAAlD;;AAEA,QAAI0B,aAAJ,EAAmB;AACjB7B,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD;AACF;AACF;AAED,OAAO,eAAe6B,MAAf,CAAsBtD,GAAtB,EAA2B;AAChC,QAAMA,GAAG,CAACuD,UAAJ,CAAe,iBAAf,CAAN;AAEA,QAAMtD,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;AACA,QAAM;AACJE,IAAAA,GADI;AAEJC,IAAAA,MAFI;AAGJmD,IAAAA,YAHI;AAIJ3C,IAAAA;AAJI,MAKFpC,KAAK,CAACwB,MAAD,CALT;AAQA,QAAMwD,OAAO,GAAG,MAAMrE,cAAc,CAACY,GAAD,CAApC;AACA,QAAM0D,WAAW,GAAGD,OAAO,GAAG,CAA9B,CAbgC,CAehC;;AACAxD,EAAAA,MAAM,CAACG,GAAP,CAAWuD,YAAX,CAAwBC,aAAxB,GAAwC3D,MAAM,CAACG,GAAP,CAAWuD,YAAX,CAAwBC,aAAxB,IACtClF,YAAY,CAACuB,MAAM,CAACG,GAAP,CAAWyD,IAAZ,EAAkB7D,GAAlB,CADd;AAGA,QAAM8D,UAAU,GAAG9D,GAAG,CAAC+D,WAAJ,CAAgB9D,MAAM,CAACG,GAAP,CAAWuD,YAAX,CAAwBC,aAAxC,EAAuD,YAAvD,CAAnB;AACA,QAAMI,SAAS,GAAGrF,aAAa,CAACmF,UAAD,EAAa9D,GAAG,CAACiE,UAAJ,GAAiB,cAAjB,CAAb,CAA/B;;AAEA,MAAID,SAAJ,EAAe;AACb,UAAMhE,GAAG,CAACuD,UAAJ,CAAe,cAAf,CAAN;AACAzF,IAAAA,WAAW,CACTkC,GADS,EAETI,GAFS,EAGTsD,WAHS,EAITzD,MAAM,CAACG,GAJE,CAAX;AAMA,UAAMvC,UAAU,CAACoC,MAAM,CAACG,GAAP,CAAWuD,YAAX,CAAwBC,aAAzB,EAAwC5D,GAAxC,CAAhB;AACD;;AAEDxB,EAAAA,OAAO,CAAC,qBAAD,CAAP;AAEA,QAAM0F,GAAG,GAAI,GAAEV,YAAa,GAAEE,WAAY,EAA1C;AACA,QAAM/F,MAAM,CAACsC,MAAM,CAACG,GAAR,EAAaC,MAAb,EAAsB,GAAEmD,YAAa,GAAEE,WAAY,EAAnD,EAAsDI,UAAtD,CAAZ;AAEAtF,EAAAA,OAAO,CAAC,qBAAD,CAAP;AAEA,QAAM1B,SAAS,CAACqH,wBAAV,CAAmC;AACvClC,IAAAA,eAAe,EAAE7B,GADsB;AAEvCgE,IAAAA,YAAY,EAAEV,WAAW,CAACW,QAAZ,EAFyB;AAGvClC,IAAAA,WAAW,EAAEjD,wBAAwB,CAACc,GAAD,EAAMC,MAAM,CAACG,GAAb,CAHE;AAIvCkE,IAAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAElE,MADE;AAEZmE,MAAAA,KAAK,EAAEN;AAFK;AAJyB,GAAnC,EAQH7C,OARG,EAAN;AAUA,QAAMrB,GAAG,CAACuD,UAAJ,CAAe,oBAAf,CAAN;AAEA/E,EAAAA,OAAO,CAAC,0BAAD,CAAP;AAEA,QAAM1B,SAAS,CAAC2H,iBAAV,CAA4B;AAChCC,IAAAA,eAAe,EAAE7D,WADe;AAEhCuD,IAAAA,YAAY,EAAEV,WAAW,CAACW,QAAZ;AAFkB,GAA5B,EAGHhD,OAHG,EAAN;AAKA,QAAMxB,eAAe,CAACI,MAAD,EAAS,IAAT,CAArB;AAEA,QAAM;AACJ0E,IAAAA;AADI,MAEF,MAAM7H,SAAS,CAAC8H,oBAAV,CAA+B;AACvC3C,IAAAA,eAAe,EAAE7B,GADsB;AAEvCyE,IAAAA,gBAAgB,EAAE,CAAChE,WAAD;AAFqB,GAA/B,EAGPQ,OAHO,EAFV;AAOAG,EAAAA,OAAO,CAACC,GAAR,CAAY9E,KAAK,CAACmI,KAAN,CAAa,qBAAoBH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,KAAM,EAAvD,CAAZ;AAEA,QAAM/E,GAAG,CAACuD,UAAJ,CAAe,iBAAf,CAAN;AAEA,QAAMvD,GAAG,CAACuD,UAAJ,CAAe,eAAf,CAAN;;AAEA,MAAItD,MAAM,CAACG,GAAP,CAAW4E,WAAf,EAA4B;AAC1B,UAAM;AACJC,MAAAA;AADI,QAEF,MAAMnI,SAAS,CAACoI,6BAAV,CAAwC;AAChDR,MAAAA,eAAe,EAAE7D,WAD+B;AAEhDoB,MAAAA,eAAe,EAAE7B;AAF+B,KAAxC,EAGPiB,OAHO,EAFV;AAOA,UAAM;AACJ8D,MAAAA;AADI,QAEFlG,gBAAgB,CAACgG,qBAAD,EAAwBjF,GAAG,CAACoF,cAA5B,EAA4CnF,MAAM,CAACG,GAAnD,CAFpB;;AAIA,QAAI,CAAC+E,QAAL,EAAe;AACb;AACA,YAAMnF,GAAG,CAACuD,UAAJ,CAAe,oBAAf,CAAN;AACD;AACF;AACF;AAED,OAAO,eAAe8B,IAAf,CAAoBrF,GAApB,EAAyB;AAC9B,QAAMsF,WAAW,GAAG,MAAM/G,OAAO,CAACyB,GAAD,CAAjC;AAEAsF,EAAAA,WAAW,CAACC,OAAZ,CAAoB,CAAC;AACnBC,IAAAA,IADmB;AAEnBC,IAAAA;AAFmB,GAAD,KAGd;AACJD,IAAAA,IAAI,GAAGA,IAAI,CAACE,KAAL,CAAW,kDAAX,CAAP;AACAC,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEJ,QAAS,GAAjC;AACAE,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBL,IAAI,CAAC,CAAD,CAAzB;AACD,GAPD;AAQD;AAED,OAAO,eAAeM,SAAf,CAAyB9F,GAAzB,EAA8B;AACnC,QAAMsF,WAAW,GAAG,MAAM/G,OAAO,CAACyB,GAAD,CAAjC;AAEAsF,EAAAA,WAAW,CAACC,OAAZ,CAAoB,CAAC;AACnBE,IAAAA,QADmB;AAEnBD,IAAAA;AAFmB,GAAD,KAGd;AACJA,IAAAA,IAAI,GAAGA,IAAI,CAACE,KAAL,CAAW,kDAAX,CAAP;AACAlE,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEgE,QAAS,GAAxB,EAA4BD,IAAI,CAAC,CAAD,CAAhC;AACAhE,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEgE,QAAS,GAAxB,EAA4BD,IAAI,CAAC,CAAD,CAAhC;AACD,GAPD;AAQD;AAED,OAAO,eAAeO,MAAf,CAAsB/F,GAAtB,EAA2B;AAChC,QAAMsF,WAAW,GAAG,MAAM/G,OAAO,CAACyB,GAAD,CAAjC;AAEAsF,EAAAA,WAAW,CAACC,OAAZ,CAAoB,CAAC;AACnBC,IAAAA,IADmB;AAEnBC,IAAAA;AAFmB,GAAD,KAGd;AACJD,IAAAA,IAAI,GAAGA,IAAI,CAACE,KAAL,CAAW,wDAAX,CAAP;AACAC,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAsB,GAAEJ,QAAS,GAAjC;AACAE,IAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBL,IAAI,CAAC,CAAD,CAAzB;AACD,GAPD;AAQD;AAED,OAAO,eAAeQ,KAAf,CAAqBhG,GAArB,EAA0B;AAC/B,QAAMC,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;AACA,QAAM;AACJW,IAAAA;AADI,MAEFpC,KAAK,CAACwB,MAAD,CAFT;AAIAzB,EAAAA,OAAO,CAAC,iBAAD,CAAP;AAEA,QAAM;AACJyH,IAAAA;AADI,MAEF,MAAMnJ,SAAS,CAACoJ,4BAAV,CAAuC;AAC/CxB,IAAAA,eAAe,EAAE7D;AAD8B,GAAvC,EAEPQ,OAFO,EAFV;AAMA,QAAM8E,gBAAgB,GAAGF,oBAAoB,CAACG,iBAArB,CAAuC,CAAvC,EAA0C3D,IAAnE;AAEA,QAAM;AACJ4D,IAAAA,YADI;AAEJC,IAAAA;AAFI,MAGFrG,MAAM,CAACG,GAHX;AAKA,QAAMrD,WAAW,CAACwJ,sBAAZ,CAAmC;AACvCC,IAAAA,oBAAoB,EAAEL,gBADiB;AAEvCM,IAAAA,OAAO,EAAEH,YAF8B;AAGvCI,IAAAA,OAAO,EAAEL,YAH8B;AAIvCM,IAAAA,eAAe,EAAEN;AAJsB,GAAnC,EAKHhF,OALG,EAAN;AAOA,QAAMvB,aAAa,CAACG,MAAD,CAAnB;AACD;AAED,OAAO,eAAe2G,IAAf,CAAoB5G,GAApB,EAAyB;AAC9B,QAAMC,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;AACA,QAAM;AACJW,IAAAA;AADI,MAEFpC,KAAK,CAACwB,MAAD,CAFT;AAIAzB,EAAAA,OAAO,CAAC,iBAAD,CAAP;AAEA,QAAM;AACJyH,IAAAA;AADI,MAEF,MAAMnJ,SAAS,CAACoJ,4BAAV,CAAuC;AAC/CxB,IAAAA,eAAe,EAAE7D;AAD8B,GAAvC,EAEPQ,OAFO,EAFV;AAMA,QAAM8E,gBAAgB,GAAGF,oBAAoB,CAACG,iBAArB,CAAuC,CAAvC,EAA0C3D,IAAnE;AAEA,QAAM1F,WAAW,CAACwJ,sBAAZ,CAAmC;AACvCC,IAAAA,oBAAoB,EAAEL,gBADiB;AAEvCM,IAAAA,OAAO,EAAE,CAF8B;AAGvCC,IAAAA,OAAO,EAAE,CAH8B;AAIvCC,IAAAA,eAAe,EAAE;AAJsB,GAAnC,EAKHtF,OALG,EAAN;AAOA,QAAMvB,aAAa,CAACG,MAAD,EAAS,MAAT,CAAnB;AACD;AAED,OAAO,eAAe4G,OAAf,CAAuB7G,GAAvB,EAA4B;AACjC,QAAMC,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;AACA,QAAM;AACJW,IAAAA;AADI,MAEFpC,KAAK,CAACwB,MAAD,CAFT;AAIAzB,EAAAA,OAAO,CAAC,mBAAD,CAAP;AAEA,QAAM1B,SAAS,CAACgK,gBAAV,CAA2B;AAC/BpC,IAAAA,eAAe,EAAE7D;AADc,GAA3B,EAEHQ,OAFG,EAAN;AAIA,QAAMxB,eAAe,CAACI,MAAD,EAAS,KAAT,CAArB;AACD;AAED,OAAO,eAAe8G,KAAf,CAAqB/G,GAArB,EAA0B;AAC/B,QAAMC,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;AACA,QAAM;AACJE,IAAAA,GADI;AAEJC,IAAAA;AAFI,MAGF5B,KAAK,CAACwB,MAAD,CAHT;AAKAzB,EAAAA,OAAO,CAAC,yBAAD,CAAP;AACA,QAAM;AACJwI,IAAAA;AADI,MAEF,MAAMzH,WAAW,CAACS,GAAD,CAFrB;AAGA,QAAMiH,WAAW,GAAG,MAAMzH,cAAc,CAACQ,GAAD,CAAxC;AAEAxB,EAAAA,OAAO,CAAC,0BAAD,CAAP;AAEA,QAAM0I,QAAQ,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAAClE,MAA7B,EAAqCqE,CAAC,EAAtC,EAA0C;AACxCD,IAAAA,QAAQ,CAACE,IAAT,CAActK,SAAS,CAACuK,wBAAV,CAAmC;AAC/CpF,MAAAA,eAAe,EAAE7B,GAD8B;AAE/CgE,MAAAA,YAAY,EAAE4C,QAAQ,CAACG,CAAD,CAAR,CAAY9C,QAAZ,EAFiC;AAG/CiD,MAAAA,kBAAkB,EAAE;AAH2B,KAAnC,EAIXjG,OAJW,EAAd;AAKD;;AAED,OAAK,IAAI8F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACnE,MAAhC,EAAwCqE,CAAC,EAAzC,EAA6C;AAC3CD,IAAAA,QAAQ,CAACE,IAAT,CAAcvK,EAAE,CAAC0K,YAAH,CAAgB;AAC5BC,MAAAA,MAAM,EAAEnH,MADoB;AAE5BoH,MAAAA,GAAG,EAAG,OAAMR,WAAW,CAACE,CAAD,CAAI;AAFC,KAAhB,EAGX9F,OAHW,EAAd;AAID,GA7B8B,CA+B/B;;;AAEA,QAAMqG,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAN;AACD;AAED,OAAO,eAAeU,QAAf,CAAwB5H,GAAxB,EAA6B;AAClC,QAAMC,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;AACA,QAAM;AACJE,IAAAA,GADI;AAEJS,IAAAA,WAFI;AAGJR,IAAAA;AAHI,MAIF5B,KAAK,CAACwB,MAAD,CAJT;AAMAzB,EAAAA,OAAO,CAAC,sCAAD,CAAP,CARkC,CAUlC;;AACA,QAAM;AACJmG,IAAAA;AADI,MAEF,MAAM7H,SAAS,CAAC8H,oBAAV,CAA+B;AACvC3C,IAAAA,eAAe,EAAE7B,GADsB;AAEvCyE,IAAAA,gBAAgB,EAAE,CAAChE,WAAD;AAFqB,GAA/B,EAGPQ,OAHO,EAFV;;AAOA,MAAI,CAACsD,YAAY,CAAC3C,IAAb,CAAkB6F,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,YAAxC,CAAL,EAA4D;AAC1D,UAAMC,eAAe,GAAGtI,mBAAmB,CACzCO,GAAG,CAACE,SAAJ,EADyC,EAEzCF,GAAG,CAACgI,WAAJ,EAFyC,EAGzC/H,MAAM,CAACG,GAAP,CAAW4E,WAAX,GAAyB,CAAzB,GAA6B,KAHY,CAA3C;;AAMA,QAAI/E,MAAM,CAACG,GAAP,CAAW4E,WAAf,EAA4B;AAC1B,YAAMpH,aAAa,CAACyC,MAAD,EAAS,CAAT,EAAYJ,MAAM,CAACG,GAAP,CAAWyH,GAAvB,EAA4B7H,GAAG,CAACgI,WAAJ,EAA5B,CAAnB;AACD;;AAED,UAAM;AACJC,MAAAA;AADI,QAEF,MAAMnL,SAAS,CAACoL,2BAAV,GAAwC7G,OAAxC,EAFV;AAGA,UAAM8G,aAAa,GAAGF,cAAc,CAACjG,IAAf,CAAoBI,IAAI,IAAIA,IAAI,CAACgG,QAAL,CAAc,iBAAd,CAA5B,CAAtB;AAEA,UAAM,CAAC3E,OAAD,IAAY,MAAMnE,UAAU,CAACU,GAAD,CAAlC;AACA,UAAMlD,SAAS,CAACuL,iBAAV,CAA4B;AAChCpG,MAAAA,eAAe,EAAE7B,GADe;AAEhCsE,MAAAA,eAAe,EAAE7D,WAFe;AAGhCsB,MAAAA,WAAW,EAAG,mBAAkBlC,MAAM,CAACG,GAAP,CAAWgC,IAAK,wBAHhB;AAIhCgC,MAAAA,YAAY,EAAEX,OAAO,CAACY,QAAR,EAJkB;AAKhChC,MAAAA,iBAAiB,EAAE8F,aALa;AAMhCG,MAAAA,cAAc,EAAEP,eAAe,CAACO;AANA,KAA5B,EAOHjH,OAPG,EAAN;AASAG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAM5B,eAAe,CAACI,MAAD,EAAS,KAAT,CAArB;AACD,GA5BD,MA4BO;AACL,UAAM;AACJgF,MAAAA;AADI,QAEF,MAAMnI,SAAS,CAACoI,6BAAV,CAAwC;AAChDR,MAAAA,eAAe,EAAE7D,WAD+B;AAEhDoB,MAAAA,eAAe,EAAE7B;AAF+B,KAAxC,EAGPiB,OAHO,EAFV;AAMA,UAAM;AACJkH,MAAAA,OAAO,EAAEC,cADL;AAEJC,MAAAA;AAFI,QAGFxJ,gBAAgB,CAACgG,qBAAD,EAAwBjF,GAAG,CAACoF,cAA5B,EAA4CnF,MAAM,CAACG,GAAnD,CAHpB;AAIA,QAAIsI,cAAc,GAAG,CAArB;;AACA,QAAID,cAAJ,EAAoB;AAClB,YAAME,iBAAiB,GAAG,MAAMtJ,iBAAiB,CAACW,GAAD,CAAjD;AACA0I,MAAAA,cAAc,GAAGC,iBAAiB,GAAG,CAArC;AACD;;AACD,UAAMZ,eAAe,GAAGtI,mBAAmB,CACzCO,GAAG,CAACE,SAAJ,EADyC,EAEzCF,GAAG,CAACgI,WAAJ,EAFyC,EAGzCS,cAAc,GAAGC,cAAH,GAAoB,CAHO,CAA3C;AAKA,UAAM;AACJE,MAAAA,QADI;AAEJC,MAAAA;AAFI,QAGFnJ,UAAU,CACZuF,qBAAqB,CAAC,CAAD,CAArB,CAAyBqD,cADb,EAEZP,eAAe,CAACO,cAFJ,CAHd;;AAQA,QAAIE,cAAJ,EAAoB;AAClB,YAAM5K,aAAa,CAACyC,MAAD,EAASqI,cAAT,EAAyBzI,MAAM,CAACG,GAAP,CAAWyH,GAApC,EAAyC7H,GAAG,CAACgI,WAAJ,EAAzC,CAAnB;;AACA,UAAI,CAACS,cAAL,EAAqB;AACnB;AACA;AACA;AACD;AACF;;AAED,QAAIG,QAAQ,CAAC9F,MAAT,GAAkB,CAAlB,IAAuB+F,QAAQ,CAAC/F,MAAT,GAAkB,CAA7C,EAAgD;AAC9C,YAAMhG,SAAS,CAAC2H,iBAAV,CAA4B;AAChCC,QAAAA,eAAe,EAAE7D,WADe;AAEhCyH,QAAAA,cAAc,EAAEO,QAFgB;AAGhCC,QAAAA,eAAe,EAAEF;AAHe,OAA5B,EAIHvH,OAJG,EAAN;AAKAG,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,YAAM5B,eAAe,CAACI,MAAD,EAAS,IAAT,CAArB;AACD;AACF;;AAED,QAAM;AACJgF,IAAAA;AADI,MAEF,MAAMnI,SAAS,CAACoI,6BAAV,CAAwC;AAChDR,IAAAA,eAAe,EAAE7D,WAD+B;AAEhDoB,IAAAA,eAAe,EAAE7B;AAF+B,GAAxC,EAGPiB,OAHO,EAFV;;AAOA,MAAIzB,oBAAoB,CAACqF,qBAAqB,CAAC,CAAD,CAArB,CAAyBqD,cAA1B,EAA0CrI,MAA1C,CAAxB,EAA2E;AACzEzB,IAAAA,OAAO,CAAC,wBAAD,CAAP;AACA,UAAM1B,SAAS,CAAC2H,iBAAV,CAA4B;AAChCC,MAAAA,eAAe,EAAE7D,WADe;AAEhCyH,MAAAA,cAAc,EAAE3I,aAAa,CAACM,MAAM,CAACG,GAAR,CAAb,CAA0BkI;AAFV,KAA5B,EAGHjH,OAHG,EAAN;AAIA,UAAMxB,eAAe,CAACI,MAAD,EAAS,IAAT,CAArB;AACD;AACF;AAED,OAAO,eAAe8I,MAAf,CAAsB/I,GAAtB,EAA2B;AAChC,QAAM;AACJa,IAAAA;AADI,MAEFpC,KAAK,CAACuB,GAAG,CAACE,SAAJ,EAAD,CAFT;AAIA,QAAM;AACJ8I,IAAAA,MAAM,EAAEC;AADJ,MAEF,MAAMnM,SAAS,CAACoM,cAAV,CAAyB;AACjCxE,IAAAA,eAAe,EAAE7D;AADgB,GAAzB,EAEPQ,OAFO,EAFV;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAYwH,SAAS,CAACE,GAAV,CAAcC,EAAE,IAAK,GAAEA,EAAE,CAACC,SAAU,KAAID,EAAE,CAACE,OAAQ,EAAnD,EAAsDC,IAAtD,CAA2D,IAA3D,CAAZ;AACD;AAED,OAAO,eAAeC,MAAf,CAAsBxJ,GAAtB,EAA2B;AAChC,QAAM;AACJa,IAAAA;AADI,MAEFpC,KAAK,CAACuB,GAAG,CAACE,SAAJ,EAAD,CAFT;AAIA,QAAMuJ,MAAM,GAAG,MAAM3M,SAAS,CAAC4M,yBAAV,CAAoC;AACvDC,IAAAA,cAAc,EAAE,CACd,KADc,CADuC;AAIvDjF,IAAAA,eAAe,EAAE7D;AAJsC,GAApC,EAKlBQ,OALkB,EAArB;AAMA,QAAM;AACJuI,IAAAA;AADI,MAEF,MAAM9M,SAAS,CAAC+M,uBAAV,CAAkC;AAC1CF,IAAAA,cAAc,EAAE,CACd,KADc,CAD0B;AAI1CjF,IAAAA,eAAe,EAAE7D;AAJyB,GAAlC,EAKPQ,OALO,EAFV;AASA,QAAM;AACJyI,IAAAA,YADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA;AAJI,MAKFR,MAAM,CAACS,kBALX;AAOA1I,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBgI,MAAM,CAAC3B,MAAO,EAAjD;AACAtG,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiB1D,iBAAiB,CAAC0L,MAAM,CAACU,KAAR,EAAeV,MAAM,CAACW,YAAtB,CAAoC,EAAnF;;AACA,MAAIX,MAAM,CAACY,MAAP,CAAcvH,MAAd,GAAuB,CAA3B,EAA8B;AAC5BtB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAgI,IAAAA,MAAM,CAACY,MAAP,CAAc9E,OAAd,CAAsB+E,KAAK,IAAI9I,OAAO,CAACC,GAAR,CAAa,KAAI6I,KAAM,EAAvB,CAA/B;AACD;;AACD9I,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBsI,QAAQ,IAAI,SAAU,cAA1D;AACAvI,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAcqI,YAAa,EAAxC;;AACA,MAAIE,WAAJ,EAAiB;AACfxI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWuI,WAAW,CAACO,SAAU,EAA9C;AACA/I,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWuI,WAAW,CAACQ,SAAU,EAA9C;AACAhJ,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWuI,WAAW,CAACS,SAAU,EAA9C;AACAjJ,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWuI,WAAW,CAACU,SAAU,EAA9C;AACD;;AACD,MAAIT,OAAJ,EAAa;AACXzI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACU,IAAK,EAAvC;AACAnJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACW,GAAI,EAAtC;AACApJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACY,GAAI,EAAtC;AACArJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACa,GAAI,EAAtC;AACAtJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACc,GAAI,EAAtC;AACAvJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACe,GAAI,EAAtC;AACAxJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACgB,GAAI,EAAtC;AACAzJ,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAawI,OAAO,CAACiB,GAAI,EAAtC;AACD;;AACD1J,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAmI,EAAAA,kBAAkB,CAACrE,OAAnB,CAA4BE,QAAD,IAAc;AACvCjE,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAIgE,QAAQ,CAAC0F,UAAW,KAAIpN,iBAAiB,CAAC0H,QAAQ,CAAC0E,KAAV,EAAiB1E,QAAQ,CAAC2E,YAA1B,CAAwC,EAAlG;AACD,GAFD;;AAGA,MAAIR,kBAAkB,CAAC9G,MAAnB,KAA8B,CAAlC,EAAqC;AACnCtB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;AACF;AAED,OAAO,eAAe2J,GAAf,CAAmBpL,GAAnB,EAAwB;AAC7B,QAAMC,MAAM,GAAGD,GAAG,CAACE,SAAJ,EAAf;;AAEA,MAAI,CAACD,MAAM,CAACG,GAAR,IAAe,CAACH,MAAM,CAACG,GAAP,CAAWiL,UAA/B,EAA2C;AACzC7M,IAAAA,OAAO,CAAC,kCAAD,CAAP;AACA,UAAMvB,eAAe,CAACgD,MAAD,CAArB;AACA;AACD;;AAEDzB,EAAAA,OAAO,CAAC,gCAAD,CAAP;AAEA,QAAM8M,OAAO,GAAGrL,MAAM,CAACG,GAAP,CAAWiL,UAA3B;AACA,QAAM;AACJE,IAAAA;AADI,MAEF,MAAM3O,GAAG,CAAC4O,gBAAJ,GAAuBnK,OAAvB,EAFV;AAGA,MAAIoK,KAAK,GAAG,IAAZ;;AAEA,OAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoE,sBAAsB,CAACzI,MAA3C,EAAmDqE,CAAC,EAApD,EAAwD;AACtD,UAAM;AACJuE,MAAAA,UADI;AAEJC,MAAAA;AAFI,QAGFJ,sBAAsB,CAACpE,CAAD,CAH1B;;AAKA,QAAIuE,UAAU,KAAKJ,OAAO,CAAC,CAAD,CAA1B,EAA+B;AAC7B,YAAM;AACJM,QAAAA;AADI,UAEF,MAAMhP,GAAG,CAACiP,mBAAJ,CAAwB;AAAE;AAClCF,QAAAA;AADgC,OAAxB,EAEPtK,OAFO,EAFV;;AAMA,UAAIiK,OAAO,CAAC/B,IAAR,CAAa,GAAb,MAAsBqC,WAAW,CAACE,uBAAZ,CAAoCvC,IAApC,CAAyC,GAAzC,CAA1B,EAAyE;AACvEkC,QAAAA,KAAK,GAAGF,sBAAsB,CAACpE,CAAD,CAA9B;AACD;AACF;AACF;;AAED,MAAI4E,cAAJ;;AAEA,MAAI,CAACN,KAAL,EAAY;AACVjN,IAAAA,OAAO,CAAC,2BAAD,CAAP;AAEA,UAAMiL,MAAM,GAAG,MAAM7M,GAAG,CAACoP,kBAAJ,CAAuB;AAC1CN,MAAAA,UAAU,EAAEJ,OAAO,CAACW,KAAR,EAD8B;AAE1CH,MAAAA,uBAAuB,EAAER,OAAO,CAACxI,MAAR,GAAiB,CAAjB,GAAqBwI,OAArB,GAA+B;AAFd,KAAvB,EAGlBjK,OAHkB,EAArB;AAKA0K,IAAAA,cAAc,GAAGtC,MAAM,CAACkC,cAAxB;AACD;;AAED,MAAIF,KAAJ,EAAW;AACTM,IAAAA,cAAc,GAAGN,KAAK,CAACE,cAAvB;AACD;;AAED,MAAIO,cAAc,GAAG,KAArB;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,WAAJ;AAEA;;AACA,SAAO,CAACF,cAAD,IAAmBC,MAAM,GAAG,CAAnC,EAAsC;AACpC,UAAM;AACJP,MAAAA;AADI,QAEF,MAAMhP,GAAG,CAACiP,mBAAJ,CAAwB;AAChCF,MAAAA,cAAc,EAAEI;AADgB,KAAxB,EAEP1K,OAFO,EAFV;AAKA,UAAMgL,iBAAiB,GAAGT,WAAW,CAACU,uBAAZ,CAAoC,CAApC,CAA1B;;AAEA,QAAI,OAAOD,iBAAiB,CAACE,gBAAzB,KAA8C,WAAlD,EAA+D;AAC7DL,MAAAA,cAAc,GAAG,IAAjB;AACAE,MAAAA,WAAW,GAAGR,WAAd;AACD,KAHD,MAGO,IAAIS,iBAAiB,CAACE,gBAAlB,CAAmCzJ,MAAnC,GAA4C,CAA5C,IAAiDqJ,MAAM,KAAK,CAAhE,EAAmE;AACxED,MAAAA,cAAc,GAAG,IAAjB;AACAE,MAAAA,WAAW,GAAGR,WAAd;AACD,KAHM,MAGA;AACLO,MAAAA,MAAM,IAAI,CAAV;AAEA,YAAM,IAAIzE,OAAJ,CAAa8E,OAAD,IAAa;AAC7BC,QAAAA,UAAU,CAACD,OAAD,EAAU,OAAO,EAAjB,CAAV;AACD,OAFK,CAAN;AAGD;AACF;;AAED,MAAIJ,WAAW,CAACtE,MAAZ,KAAuB,oBAA3B,EAAiD;AAC/CtG,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA2K,IAAAA,WAAW,CAACE,uBAAZ,CAAoC/G,OAApC,CAA4C,CAAC;AAC3CmG,MAAAA,UAD2C;AAE3Ca,MAAAA,gBAF2C;AAG3CG,MAAAA,gBAH2C;AAI3CC,MAAAA;AAJ2C,KAAD,KAKtC;AACJ,UAAIA,gBAAgB,KAAK,SAAzB,EAAoC;AAClCnL,QAAAA,OAAO,CAACC,GAAR,CAAY9E,KAAK,CAACmI,KAAN,CAAa,GAAE4H,gBAAgB,IAAIhB,UAAW,oBAA9C,CAAZ;AACA;AACD;;AAEDlK,MAAAA,OAAO,CAACC,GAAR,CAAY9E,KAAK,CAACiQ,MAAN,CAAc,GAAEF,gBAAgB,IAAIhB,UAAW,wBAA/C,CAAZ;;AAEA,UAAIa,gBAAJ,EAAsB;AACpB/K,QAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AAEA8K,QAAAA,gBAAgB,CAAChH,OAAjB,CAA0BsH,KAAD,IAAW;AAClCrL,UAAAA,OAAO,CAACC,GAAR,CAAa,KAAIoL,KAAM,EAAvB;AACD,SAFD;AAGD;;AAEDrL,MAAAA,OAAO,CAACC,GAAR,CAAY,kGAAZ;AACD,KAtBD;AAuBD,GAzBD,MAyBO,IAAI2K,WAAW,CAACtE,MAAZ,KAAuB,QAA3B,EAAqC;AAC1CtG,IAAAA,OAAO,CAACC,GAAR,CAAY9E,KAAK,CAACmI,KAAN,CAAY,6BAAZ,CAAZ;AACAtG,IAAAA,OAAO,CAAC,kCAAD,CAAP;AACA,UAAMvB,eAAe,CAACgD,MAAD,EAAS8L,cAAT,CAArB;AACD;AACF","sourcesContent":["import chalk from 'chalk';\nimport {\n  acm,\n  s3,\n  beanstalk,\n  autoScaling,\n  cloudTrail\n} from './aws';\nimport updateSSLConfig from './certificates';\nimport {\n  rolePolicy,\n  trailBucketPolicy,\n  DeregisterEvent,\n  deregisterEventTarget,\n  serviceRole,\n  eventTargetRolePolicy,\n  eventTargetRole,\n  gracefulShutdownAutomationDocument,\n  passRolePolicy\n} from './policies';\nimport upload, { uploadEnvFile } from './upload';\nimport {\n  archiveApp,\n  injectFiles\n} from './prepare-bundle';\nimport {\n  coloredStatusText,\n  ensureBucketExists,\n  ensureInstanceProfileExists,\n  ensureRoleExists,\n  ensureRoleAdded,\n  ensurePoliciesAttached,\n  ensureBucketPolicyAttached,\n  getAccountId,\n  getLogs,\n  logStep,\n  names,\n  tmpBuildPath,\n  shouldRebuild,\n  ensureCloudWatchRule,\n  ensureRuleTargetExists,\n  ensureInlinePolicyAttached,\n  findBucketWithPrefix,\n  createUniqueName,\n  checkLongEnvSafe,\n  createVersionDescription,\n  ensureSsmDocument\n} from './utils';\nimport {\n  largestVersion,\n  largestEnvVersion,\n  ebVersions,\n  oldVersions,\n  oldEnvVersions\n} from './versions';\n\nimport {\n  createDesiredConfig,\n  diffConfig,\n  scalingConfig,\n  scalingConfigChanged\n} from './eb-config';\n\nimport {\n  waitForEnvReady,\n  waitForHealth\n} from './env-ready';\n\nexport async function setup(api) {\n  const config = api.getConfig();\n  const appConfig = config.app;\n\n  const {\n    bucket: bucketName,\n    app: appName,\n    instanceProfile,\n    serviceRole: serviceRoleName,\n    trailBucketPrefix,\n    trailName,\n    deregisterRuleName,\n    environment: environmentName,\n    eventTargetRole: eventTargetRoleName,\n    eventTargetPolicyName,\n    eventTargetPassRoleName,\n    automationDocument\n  } = names(config);\n\n  logStep('=> Setting up');\n\n  // Create bucket if needed\n  const {\n    Buckets\n  } = await s3.listBuckets().promise();\n\n  const beanstalkBucketCreated = await ensureBucketExists(Buckets, bucketName, appConfig.region);\n\n  if (beanstalkBucketCreated) {\n    console.log('  Created Bucket');\n  }\n\n  logStep('=> Ensuring IAM Roles and Instance Profiles are setup');\n\n  // Create role and instance profile\n  await ensureRoleExists(instanceProfile, rolePolicy);\n  await ensureInstanceProfileExists(config, instanceProfile);\n  await ensurePoliciesAttached(config, instanceProfile, [\n    'arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier',\n    'arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker',\n    'arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier',\n    ...appConfig.gracefulShutdown ? ['arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM'] : []\n  ]);\n  await ensureRoleAdded(config, instanceProfile, instanceProfile);\n\n  // Create role used by enhanced health\n  await ensureRoleExists(serviceRoleName, serviceRole);\n  await ensurePoliciesAttached(config, serviceRoleName, [\n    'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth',\n    'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService'\n  ]);\n\n  if (appConfig.gracefulShutdown) {\n    const accountId = await getAccountId();\n    const policy = eventTargetRolePolicy(accountId, environmentName, appConfig.region || 'us-east-1');\n    const passPolicy = passRolePolicy(accountId, eventTargetRoleName);\n\n    await ensureRoleExists(eventTargetRoleName, eventTargetRole, true);\n    await ensureInlinePolicyAttached(eventTargetRoleName, eventTargetPolicyName, policy);\n    await ensureInlinePolicyAttached(eventTargetRoleName, eventTargetPassRoleName, passPolicy);\n  }\n\n  // Create beanstalk application if needed\n  const {\n    Applications\n  } = await beanstalk.describeApplications().promise();\n\n  if (!Applications.find(app => app.ApplicationName === appName)) {\n    const params = {\n      ApplicationName: appName,\n      Description: `App \"${appConfig.name}\" managed by Meteor Up`,\n      SolutionStackName: '64bit Amazon Linux 2 v5.4.1 running Node.js 14'\n    };\n\n    await beanstalk.createApplication(params).promise();\n    console.log('  Created Beanstalk application');\n  }\n\n  if (appConfig.gracefulShutdown) {\n    logStep('=> Ensuring Graceful Shutdown is setup');\n\n    const existingBucket = findBucketWithPrefix(Buckets, trailBucketPrefix);\n    const trailBucketName = existingBucket ?\n      existingBucket.Name :\n      createUniqueName(trailBucketPrefix);\n    const region = appConfig.region || 'us-east-1';\n    const accountId = await getAccountId();\n    const policy = trailBucketPolicy(accountId, trailBucketName);\n\n    const trailBucketCreated = await ensureBucketExists(Buckets, trailBucketName, appConfig.region);\n    await ensureBucketPolicyAttached(trailBucketName, policy);\n\n    if (trailBucketCreated) {\n      console.log('  Created bucket for Cloud Trail');\n    }\n\n    const params = {\n      trailNameList: [\n        trailName\n      ]\n    };\n\n    const {\n      trailList\n    } = await cloudTrail.describeTrails(params).promise();\n\n    if (trailList.length === 0) {\n      const createParams = {\n        Name: trailName,\n        S3BucketName: trailBucketName\n      };\n\n      await cloudTrail.createTrail(createParams).promise();\n\n      console.log('  Created CloudTrail trail');\n    }\n\n    const createdDocument = await ensureSsmDocument(\n      automationDocument,\n      gracefulShutdownAutomationDocument()\n    );\n    if (createdDocument) {\n      console.log('  Created SSM Automation Document');\n    }\n\n    const createdRule = await ensureCloudWatchRule(deregisterRuleName, 'Used by Meteor Up for graceful shutdown', DeregisterEvent);\n\n    if (createdRule) {\n      console.log('  Created Cloud Watch rule');\n    }\n\n    const target = deregisterEventTarget(environmentName, eventTargetRoleName, accountId, region);\n    const createdTarget = await ensureRuleTargetExists(deregisterRuleName, target, accountId);\n\n    if (createdTarget) {\n      console.log('  Created target for Cloud Watch rule');\n    }\n  }\n}\n\nexport async function deploy(api) {\n  await api.runCommand('beanstalk.setup');\n\n  const config = api.getConfig();\n  const {\n    app,\n    bucket,\n    bundlePrefix,\n    environment\n  } = names(config);\n\n\n  const version = await largestVersion(api);\n  const nextVersion = version + 1;\n\n  // Mutates the config, so the meteor.build command will have the correct build location\n  config.app.buildOptions.buildLocation = config.app.buildOptions.buildLocation ||\n    tmpBuildPath(config.app.path, api);\n\n  const bundlePath = api.resolvePath(config.app.buildOptions.buildLocation, 'bundle.zip');\n  const willBuild = shouldRebuild(bundlePath, api.getOptions()['cached-build']);\n\n  if (willBuild) {\n    await api.runCommand('meteor.build');\n    injectFiles(\n      api,\n      app,\n      nextVersion,\n      config.app\n    );\n    await archiveApp(config.app.buildOptions.buildLocation, api);\n  }\n\n  logStep('=> Uploading bundle');\n\n  const key = `${bundlePrefix}${nextVersion}`;\n  await upload(config.app, bucket, `${bundlePrefix}${nextVersion}`, bundlePath);\n\n  logStep('=> Creating Version');\n\n  await beanstalk.createApplicationVersion({\n    ApplicationName: app,\n    VersionLabel: nextVersion.toString(),\n    Description: createVersionDescription(api, config.app),\n    SourceBundle: {\n      S3Bucket: bucket,\n      S3Key: key\n    }\n  }).promise();\n\n  await api.runCommand('beanstalk.reconfig');\n\n  logStep('=> Deploying new version');\n\n  await beanstalk.updateEnvironment({\n    EnvironmentName: environment,\n    VersionLabel: nextVersion.toString()\n  }).promise();\n\n  await waitForEnvReady(config, true);\n\n  const {\n    Environments\n  } = await beanstalk.describeEnvironments({\n    ApplicationName: app,\n    EnvironmentNames: [environment]\n  }).promise();\n\n  console.log(chalk.green(`App is running at ${Environments[0].CNAME}`));\n\n  await api.runCommand('beanstalk.clean');\n\n  await api.runCommand('beanstalk.ssl');\n\n  if (config.app.longEnvVars) {\n    const {\n      ConfigurationSettings\n    } = await beanstalk.describeConfigurationSettings({\n      EnvironmentName: environment,\n      ApplicationName: app\n    }).promise();\n\n    const {\n      migrated\n    } = checkLongEnvSafe(ConfigurationSettings, api.commandHistory, config.app);\n\n    if (!migrated) {\n      // We know the bundle now supports longEnvVars, so it is safe to migrate\n      await api.runCommand('beanstalk.reconfig');\n    }\n  }\n}\n\nexport async function logs(api) {\n  const logsContent = await getLogs(api);\n\n  logsContent.forEach(({\n    data,\n    instance\n  }) => {\n    data = data.split('-------------------------------------\\n/var/log/');\n    process.stdout.write(`${instance} `);\n    process.stdout.write(data[1]);\n  });\n}\n\nexport async function logsNginx(api) {\n  const logsContent = await getLogs(api);\n\n  logsContent.forEach(({\n    instance,\n    data\n  }) => {\n    data = data.split('-------------------------------------\\n/var/log/');\n    console.log(`${instance} `, data[2]);\n    console.log(`${instance} `, data[4]);\n  });\n}\n\nexport async function logsEb(api) {\n  const logsContent = await getLogs(api);\n\n  logsContent.forEach(({\n    data,\n    instance\n  }) => {\n    data = data.split('\\n\\n\\n-------------------------------------\\n/var/log/');\n    process.stdout.write(`${instance} `);\n    process.stdout.write(data[2]);\n  });\n}\n\nexport async function start(api) {\n  const config = api.getConfig();\n  const {\n    environment\n  } = names(config);\n\n  logStep('=> Starting App');\n\n  const {\n    EnvironmentResources\n  } = await beanstalk.describeEnvironmentResources({\n    EnvironmentName: environment\n  }).promise();\n\n  const autoScalingGroup = EnvironmentResources.AutoScalingGroups[0].Name;\n\n  const {\n    minInstances,\n    maxInstances\n  } = config.app;\n\n  await autoScaling.updateAutoScalingGroup({\n    AutoScalingGroupName: autoScalingGroup,\n    MaxSize: maxInstances,\n    MinSize: minInstances,\n    DesiredCapacity: minInstances\n  }).promise();\n\n  await waitForHealth(config);\n}\n\nexport async function stop(api) {\n  const config = api.getConfig();\n  const {\n    environment\n  } = names(config);\n\n  logStep('=> Stopping App');\n\n  const {\n    EnvironmentResources\n  } = await beanstalk.describeEnvironmentResources({\n    EnvironmentName: environment\n  }).promise();\n\n  const autoScalingGroup = EnvironmentResources.AutoScalingGroups[0].Name;\n\n  await autoScaling.updateAutoScalingGroup({\n    AutoScalingGroupName: autoScalingGroup,\n    MaxSize: 0,\n    MinSize: 0,\n    DesiredCapacity: 0\n  }).promise();\n\n  await waitForHealth(config, 'Grey');\n}\n\nexport async function restart(api) {\n  const config = api.getConfig();\n  const {\n    environment\n  } = names(config);\n\n  logStep('=> Restarting App');\n\n  await beanstalk.restartAppServer({\n    EnvironmentName: environment\n  }).promise();\n\n  await waitForEnvReady(config, false);\n}\n\nexport async function clean(api) {\n  const config = api.getConfig();\n  const {\n    app,\n    bucket\n  } = names(config);\n\n  logStep('=> Finding old versions');\n  const {\n    versions\n  } = await oldVersions(api);\n  const envVersions = await oldEnvVersions(api);\n\n  logStep('=> Removing old versions');\n\n  const promises = [];\n  for (let i = 0; i < versions.length; i++) {\n    promises.push(beanstalk.deleteApplicationVersion({\n      ApplicationName: app,\n      VersionLabel: versions[i].toString(),\n      DeleteSourceBundle: true\n    }).promise());\n  }\n\n  for (let i = 0; i < envVersions.length; i++) {\n    promises.push(s3.deleteObject({\n      Bucket: bucket,\n      Key: `env/${envVersions[i]}.txt`\n    }).promise());\n  }\n\n  // TODO: remove bundles\n\n  await Promise.all(promises);\n}\n\nexport async function reconfig(api) {\n  const config = api.getConfig();\n  const {\n    app,\n    environment,\n    bucket\n  } = names(config);\n\n  logStep('=> Configuring Beanstalk Environment');\n\n  // check if env exists\n  const {\n    Environments\n  } = await beanstalk.describeEnvironments({\n    ApplicationName: app,\n    EnvironmentNames: [environment]\n  }).promise();\n\n  if (!Environments.find(env => env.Status !== 'Terminated')) {\n    const desiredEbConfig = createDesiredConfig(\n      api.getConfig(),\n      api.getSettings(),\n      config.app.longEnvVars ? 1 : false\n    );\n\n    if (config.app.longEnvVars) {\n      await uploadEnvFile(bucket, 1, config.app.env, api.getSettings());\n    }\n\n    const {\n      SolutionStacks\n    } = await beanstalk.listAvailableSolutionStacks().promise();\n    const solutionStack = SolutionStacks.find(name => name.endsWith('running Node.js'));\n\n    const [version] = await ebVersions(api);\n    await beanstalk.createEnvironment({\n      ApplicationName: app,\n      EnvironmentName: environment,\n      Description: `Environment for ${config.app.name}, managed by Meteor Up`,\n      VersionLabel: version.toString(),\n      SolutionStackName: solutionStack,\n      OptionSettings: desiredEbConfig.OptionSettings\n    }).promise();\n\n    console.log(' Created Environment');\n    await waitForEnvReady(config, false);\n  } else {\n    const {\n      ConfigurationSettings\n    } = await beanstalk.describeConfigurationSettings({\n      EnvironmentName: environment,\n      ApplicationName: app\n    }).promise();\n    const {\n      enabled: longEnvEnabled,\n      safeToReconfig\n    } = checkLongEnvSafe(ConfigurationSettings, api.commandHistory, config.app);\n    let nextEnvVersion = 0;\n    if (safeToReconfig) {\n      const currentEnvVersion = await largestEnvVersion(api);\n      nextEnvVersion = currentEnvVersion + 1;\n    }\n    const desiredEbConfig = createDesiredConfig(\n      api.getConfig(),\n      api.getSettings(),\n      safeToReconfig ? nextEnvVersion : 0\n    );\n    const {\n      toRemove,\n      toUpdate\n    } = diffConfig(\n      ConfigurationSettings[0].OptionSettings,\n      desiredEbConfig.OptionSettings\n    );\n\n    if (longEnvEnabled) {\n      await uploadEnvFile(bucket, nextEnvVersion, config.app.env, api.getSettings());\n      if (!safeToReconfig) {\n        // Reconfig will be run again after deploy to migrate.\n        // This way we know the bundle includes the necessary files\n        return;\n      }\n    }\n\n    if (toRemove.length > 0 || toUpdate.length > 0) {\n      await beanstalk.updateEnvironment({\n        EnvironmentName: environment,\n        OptionSettings: toUpdate,\n        OptionsToRemove: toRemove\n      }).promise();\n      console.log('  Updated Environment');\n      await waitForEnvReady(config, true);\n    }\n  }\n\n  const {\n    ConfigurationSettings\n  } = await beanstalk.describeConfigurationSettings({\n    EnvironmentName: environment,\n    ApplicationName: app\n  }).promise();\n\n  if (scalingConfigChanged(ConfigurationSettings[0].OptionSettings, config)) {\n    logStep('=> Configuring scaling');\n    await beanstalk.updateEnvironment({\n      EnvironmentName: environment,\n      OptionSettings: scalingConfig(config.app).OptionSettings\n    }).promise();\n    await waitForEnvReady(config, true);\n  }\n}\n\nexport async function events(api) {\n  const {\n    environment\n  } = names(api.getConfig());\n\n  const {\n    Events: envEvents\n  } = await beanstalk.describeEvents({\n    EnvironmentName: environment\n  }).promise();\n\n  console.log(envEvents.map(ev => `${ev.EventDate}: ${ev.Message}`).join('\\n'));\n}\n\nexport async function status(api) {\n  const {\n    environment\n  } = names(api.getConfig());\n\n  const result = await beanstalk.describeEnvironmentHealth({\n    AttributeNames: [\n      'All'\n    ],\n    EnvironmentName: environment\n  }).promise();\n  const {\n    InstanceHealthList\n  } = await beanstalk.describeInstancesHealth({\n    AttributeNames: [\n      'All'\n    ],\n    EnvironmentName: environment\n  }).promise();\n\n  const {\n    RequestCount,\n    Duration,\n    StatusCodes,\n    Latency\n  } = result.ApplicationMetrics;\n\n  console.log(`Environment Status: ${result.Status}`);\n  console.log(`Health Status: ${coloredStatusText(result.Color, result.HealthStatus)}`);\n  if (result.Causes.length > 0) {\n    console.log('Causes: ');\n    result.Causes.forEach(cause => console.log(`  ${cause}`));\n  }\n  console.log('');\n  console.log(`=== Metrics For Last ${Duration || 'Unknown'} Minutes ===`);\n  console.log(`  Requests: ${RequestCount}`);\n  if (StatusCodes) {\n    console.log('  Status Codes');\n    console.log(`    2xx: ${StatusCodes.Status2xx}`);\n    console.log(`    3xx: ${StatusCodes.Status3xx}`);\n    console.log(`    4xx: ${StatusCodes.Status4xx}`);\n    console.log(`    5xx: ${StatusCodes.Status5xx}`);\n  }\n  if (Latency) {\n    console.log('  Latency');\n    console.log(`    99.9%: ${Latency.P999}`);\n    console.log(`    99%  : ${Latency.P99}`);\n    console.log(`    95%  : ${Latency.P95}`);\n    console.log(`    90%  : ${Latency.P90}`);\n    console.log(`    85%  : ${Latency.P85}`);\n    console.log(`    75%  : ${Latency.P75}`);\n    console.log(`    50%  : ${Latency.P50}`);\n    console.log(`    10%  : ${Latency.P10}`);\n  }\n  console.log('');\n  console.log('=== Instances ===');\n  InstanceHealthList.forEach((instance) => {\n    console.log(`  ${instance.InstanceId}: ${coloredStatusText(instance.Color, instance.HealthStatus)}`);\n  });\n  if (InstanceHealthList.length === 0) {\n    console.log('  0 Instances');\n  }\n}\n\nexport async function ssl(api) {\n  const config = api.getConfig();\n\n  if (!config.app || !config.app.sslDomains) {\n    logStep('=> Updating Beanstalk SSL Config');\n    await updateSSLConfig(config);\n    return;\n  }\n\n  logStep('=> Checking Certificate Status');\n\n  const domains = config.app.sslDomains;\n  const {\n    CertificateSummaryList\n  } = await acm.listCertificates().promise();\n  let found = null;\n\n  for (let i = 0; i < CertificateSummaryList.length; i++) {\n    const {\n      DomainName,\n      CertificateArn\n    } = CertificateSummaryList[i];\n\n    if (DomainName === domains[0]) {\n      const {\n        Certificate\n      } = await acm.describeCertificate({ // eslint-disable-line no-await-in-loop\n        CertificateArn\n      }).promise();\n\n      if (domains.join(',') === Certificate.SubjectAlternativeNames.join(',')) {\n        found = CertificateSummaryList[i];\n      }\n    }\n  }\n\n  let certificateArn;\n\n  if (!found) {\n    logStep('=> Requesting Certificate');\n\n    const result = await acm.requestCertificate({\n      DomainName: domains.shift(),\n      SubjectAlternativeNames: domains.length > 0 ? domains : null\n    }).promise();\n\n    certificateArn = result.CertificateArn;\n  }\n\n  if (found) {\n    certificateArn = found.CertificateArn;\n  }\n\n  let emailsProvided = false;\n  let checks = 0;\n  let certificate;\n\n  /* eslint-disable no-await-in-loop */\n  while (!emailsProvided && checks < 5) {\n    const {\n      Certificate\n    } = await acm.describeCertificate({\n      CertificateArn: certificateArn\n    }).promise();\n    const validationOptions = Certificate.DomainValidationOptions[0];\n\n    if (typeof validationOptions.ValidationEmails === 'undefined') {\n      emailsProvided = true;\n      certificate = Certificate;\n    } else if (validationOptions.ValidationEmails.length > 0 || checks === 6) {\n      emailsProvided = true;\n      certificate = Certificate;\n    } else {\n      checks += 1;\n\n      await new Promise((resolve) => {\n        setTimeout(resolve, 1000 * 10);\n      });\n    }\n  }\n\n  if (certificate.Status === 'PENDING_VALIDATION') {\n    console.log('Certificate is pending validation.');\n    certificate.DomainValidationOptions.forEach(({\n      DomainName,\n      ValidationEmails,\n      ValidationDomain,\n      ValidationStatus\n    }) => {\n      if (ValidationStatus === 'SUCCESS') {\n        console.log(chalk.green(`${ValidationDomain || DomainName} has been verified`));\n        return;\n      }\n\n      console.log(chalk.yellow(`${ValidationDomain || DomainName} is pending validation`));\n\n      if (ValidationEmails) {\n        console.log('Emails with instructions have been sent to:');\n\n        ValidationEmails.forEach((email) => {\n          console.log(`  ${email}`);\n        });\n      }\n\n      console.log('Run \"mup beanstalk ssl\" after you have verified the domains, or to check the verification status');\n    });\n  } else if (certificate.Status === 'ISSUED') {\n    console.log(chalk.green('Certificate has been issued'));\n    logStep('=> Updating Beanstalk SSL Config');\n    await updateSSLConfig(config, certificateArn);\n  }\n}\n"],"file":"command-handlers.js"}