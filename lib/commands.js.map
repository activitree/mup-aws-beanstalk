{"version":3,"sources":["../src/commands.js"],"names":["prepared","prepare","commandHandler","handler","api","getConfig","app","setup","description","commandHandlers","deploy","builder","subYargs","option","boolean","logs","yargs","strict","alias","number","logsNginx","name","logsEb","start","stop","restart","events","clean","ssl","reconfig","status"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAIA,QAAQ,GAAG,KAAf;;AAEA,SAASC,OAAT,CAAiBC,cAAjB,EAAiC;AAC/B,SAAO,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAC3B,QAAI,CAACJ,QAAL,EAAe;AACb,wBAAUI,GAAG,CAACC,SAAJ,GAAgBC,GAA1B;AACAN,MAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,WAAOE,cAAc,CAACE,GAAD,CAArB;AACD,GAPD;AAQD;;AAEM,IAAMG,KAAK,GAAG;AACnBC,EAAAA,WAAW,EAAE,2BADM;AAEnBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACF,KAAjB;AAFG,CAAd;;AAKA,IAAMG,MAAM,GAAG;AACpBF,EAAAA,WAAW,EAAE,qCADO;AAEpBG,EAAAA,OAFoB,mBAEZC,QAFY,EAEF;AAChB,WAAOA,QAAQ,CAACC,MAAT,CAAgB,cAAhB,EAAgC;AACrCL,MAAAA,WAAW,EAAE,gCADwB;AAErCM,MAAAA,OAAO,EAAE;AAF4B,KAAhC,CAAP;AAID,GAPmB;AAQpBX,EAAAA,OAAO,EAAEM,eAAe,CAACC;AARL,CAAf;;AAWA,IAAMK,IAAI,GAAG;AAClBP,EAAAA,WAAW,EAAE,kBADK;AAElBG,EAAAA,OAFkB,mBAEVK,KAFU,EAEH;AACb,WAAOA,KAAK,CACTC,MADI,CACG,KADH,EAEJJ,MAFI,CAEG,MAFH,EAEW;AACdL,MAAAA,WAAW,EAAE,kDADC;AAEdU,MAAAA,KAAK,EAAE,GAFO;AAGdC,MAAAA,MAAM,EAAE;AAHM,KAFX,EAOJN,MAPI,CAOG,QAPH,EAOa;AAChBL,MAAAA,WAAW,EAAE,mBADG;AAEhBU,MAAAA,KAAK,EAAE,GAFS;AAGhBJ,MAAAA,OAAO,EAAE;AAHO,KAPb,CAAP;AAYD,GAfiB;AAgBlBX,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACM,IAAjB;AAhBE,CAAb;;AAmBA,IAAMK,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAE,YADiB;AAEvBb,EAAAA,WAAW,EAAE,iBAFU;AAGvBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACW,SAAjB;AAHO,CAAlB;;AAMA,IAAME,MAAM,GAAG;AACpBD,EAAAA,IAAI,EAAE,SADc;AAEpBb,EAAAA,WAAW,EAAE,6DAFO;AAGpBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACa,MAAjB;AAHI,CAAf;;AAOA,IAAMC,KAAK,GAAG;AACnBf,EAAAA,WAAW,EAAE,WADM;AAEnBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACc,KAAjB;AAFG,CAAd;;AAKA,IAAMC,IAAI,GAAG;AAClBhB,EAAAA,WAAW,EAAE,UADK;AAElBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACe,IAAjB;AAFE,CAAb;;AAKA,IAAMC,OAAO,GAAG;AACrBjB,EAAAA,WAAW,EAAE,aADQ;AAErBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACgB,OAAjB;AAFK,CAAhB;;AAKA,IAAMC,MAAM,GAAG;AACpBlB,EAAAA,WAAW,EAAE,oBADO;AAEpBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACiB,MAAjB;AAFI,CAAf;;AAKA,IAAMC,KAAK,GAAG;AACnBnB,EAAAA,WAAW,EAAE,qCADM;AAEnBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACkB,KAAjB;AAFG,CAAd;;AAKA,IAAMC,GAAG,GAAG;AACjBpB,EAAAA,WAAW,EAAE,0CADI;AAEjBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACmB,GAAjB;AAFC,CAAZ;;AAKA,IAAMC,QAAQ,GAAG;AACtBrB,EAAAA,WAAW,EAAE,gEADS;AAEtBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACoB,QAAjB;AAFM,CAAjB;;AAKA,IAAMC,MAAM,GAAG;AACpBtB,EAAAA,WAAW,EAAE,oBADO;AAEpBL,EAAAA,OAAO,EAAEF,OAAO,CAACQ,eAAe,CAACqB,MAAjB;AAFI,CAAf","sourcesContent":["import * as commandHandlers from './command-handlers';\nimport configure from './aws';\n\nlet prepared = false;\n\nfunction prepare(commandHandler) {\n  return function handler(api) {\n    if (!prepared) {\n      configure(api.getConfig().app);\n      prepared = true;\n    }\n\n    return commandHandler(api);\n  };\n}\n\nexport const setup = {\n  description: 'Prepare AWS to deploy app',\n  handler: prepare(commandHandlers.setup)\n};\n\nexport const deploy = {\n  description: 'Deploy app to AWS Elastic Beanstalk',\n  builder(subYargs) {\n    return subYargs.option('cached-build', {\n      description: 'Use build from previous deploy',\n      boolean: true\n    });\n  },\n  handler: commandHandlers.deploy\n};\n\nexport const logs = {\n  description: 'View app\\'s logs',\n  builder(yargs) {\n    return yargs\n      .strict(false)\n      .option('tail', {\n        description: 'Number of lines to show from the end of the logs',\n        alias: 't',\n        number: true\n      })\n      .option('follow', {\n        description: 'Follow log output',\n        alias: 'f',\n        boolean: true\n      });\n  },\n  handler: prepare(commandHandlers.logs)\n};\n\nexport const logsNginx = {\n  name: 'logs-nginx',\n  description: 'View Nginx logs',\n  handler: prepare(commandHandlers.logsNginx)\n};\n\nexport const logsEb = {\n  name: 'logs-eb',\n  description: 'Logs from setting up server and installing npm dependencies',\n  handler: prepare(commandHandlers.logsEb)\n};\n\n\nexport const start = {\n  description: 'Start app',\n  handler: prepare(commandHandlers.start)\n};\n\nexport const stop = {\n  description: 'Stop app',\n  handler: prepare(commandHandlers.stop)\n};\n\nexport const restart = {\n  description: 'Restart app',\n  handler: prepare(commandHandlers.restart)\n};\n\nexport const events = {\n  description: 'Environment Events',\n  handler: prepare(commandHandlers.events)\n};\n\nexport const clean = {\n  description: 'Remove old bundles and app versions',\n  handler: prepare(commandHandlers.clean)\n};\n\nexport const ssl = {\n  description: 'Setup and view status of ssl certificate',\n  handler: prepare(commandHandlers.ssl)\n};\n\nexport const reconfig = {\n  description: 'Update env variables, instance count, and Meteor settings.json',\n  handler: prepare(commandHandlers.reconfig)\n};\n\nexport const status = {\n  description: 'View status of app',\n  handler: prepare(commandHandlers.status)\n};\n"],"file":"commands.js"}