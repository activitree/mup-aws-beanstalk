{"version":3,"sources":["../src/commands.js"],"names":["commandHandlers","configure","prepared","prepare","commandHandler","handler","api","getConfig","app","setup","description","deploy","builder","subYargs","option","boolean","logs","yargs","strict","alias","number","logsNginx","name","logsEb","start","stop","restart","events","clean","ssl","reconfig","status"],"mappings":"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","sourcesContent":["import * as commandHandlers from './command-handlers';\nimport configure from './aws';\n\nlet prepared = false;\n\nfunction prepare(commandHandler) {\n  return function handler(api) {\n    if (!prepared) {\n      configure(api.getConfig().app);\n      prepared = true;\n    }\n\n    return commandHandler(api);\n  };\n}\n\nexport const setup = {\n  description: 'Prepare AWS to deploy app',\n  handler: prepare(commandHandlers.setup)\n};\n\nexport const deploy = {\n  description: 'Deploy app to AWS Elastic Beanstalk',\n  builder(subYargs) {\n    return subYargs.option('cached-build', {\n      description: 'Use build from previous deploy',\n      boolean: true\n    });\n  },\n  handler: commandHandlers.deploy\n};\n\nexport const logs = {\n  description: 'View app\\'s logs',\n  builder(yargs) {\n    return yargs\n      .strict(false)\n      .option('tail', {\n        description: 'Number of lines to show from the end of the logs',\n        alias: 't',\n        number: true\n      })\n      .option('follow', {\n        description: 'Follow log output',\n        alias: 'f',\n        boolean: true\n      });\n  },\n  handler: prepare(commandHandlers.logs)\n};\n\nexport const logsNginx = {\n  name: 'logs-nginx',\n  description: 'View Nginx logs',\n  handler: prepare(commandHandlers.logsNginx)\n};\n\nexport const logsEb = {\n  name: 'logs-eb',\n  description: 'Logs from setting up server and installing npm dependencies',\n  handler: prepare(commandHandlers.logsEb)\n};\n\n\nexport const start = {\n  description: 'Start app',\n  handler: prepare(commandHandlers.start)\n};\n\nexport const stop = {\n  description: 'Stop app',\n  handler: prepare(commandHandlers.stop)\n};\n\nexport const restart = {\n  description: 'Restart app',\n  handler: prepare(commandHandlers.restart)\n};\n\nexport const events = {\n  description: 'Environment Events',\n  handler: prepare(commandHandlers.events)\n};\n\nexport const clean = {\n  description: 'Remove old bundles and app versions',\n  handler: prepare(commandHandlers.clean)\n};\n\nexport const ssl = {\n  description: 'Setup and view status of ssl certificate',\n  handler: prepare(commandHandlers.ssl)\n};\n\nexport const reconfig = {\n  description: 'Update env variables, instance count, and Meteor settings.json',\n  handler: prepare(commandHandlers.reconfig)\n};\n\nexport const status = {\n  description: 'View status of app',\n  handler: prepare(commandHandlers.status)\n};\n"],"file":"commands.js"}