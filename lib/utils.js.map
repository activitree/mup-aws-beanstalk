{"version":3,"sources":["../src/utils.js"],"names":["axios","chalk","fs","isEqual","os","random","uuid","execSync","beanstalk","cloudWatchEvents","iam","s3","sts","ssm","getRecheckInterval","logStep","message","console","log","blue","shouldRebuild","bundlePath","useCachedBuild","existsSync","tmpBuildPath","appPath","api","rand","create","uuidNumbers","i","push","resolvePath","tmpdir","v4","names","config","name","app","toLowerCase","bucket","environment","bundlePrefix","instanceProfile","serviceRole","trailBucketPrefix","trailName","deregisterRuleName","eventTargetRole","eventTargetPolicyName","eventTargetPassRoleName","automationDocument","createUniqueName","prefix","randomNumbers","Math","floor","Date","now","retrieveEnvironmentInfo","count","getConfig","EnvironmentInfo","EnvironmentName","InfoType","promise","length","Error","Promise","resolve","reject","setTimeout","then","catch","getLogs","requestEnvironmentInfo","logsForServer","reduce","result","info","Ec2InstanceId","Message","all","Object","keys","map","key","get","data","instance","getNodeVersion","star","readFileSync","toString","nodeVersionTxt","JSON","parse","npmVersion","nodeVersion","substr","startsWith","attachPolicies","roleName","policies","promises","forEach","policy","attachRolePolicy","RoleName","PolicyArn","getAccountId","getCallerIdentity","Account","ensureRoleExists","assumeRolePolicyDocument","ensureAssumeRolePolicy","exists","updateAssumeRolePolicy","Role","getRole","currentAssumeRolePolicy","decodeURIComponent","AssumeRolePolicyDocument","stringify","e","createRole","PolicyDocument","ensureInstanceProfileExists","getInstanceProfile","InstanceProfileName","createInstanceProfile","ensureRoleAdded","role","added","InstanceProfile","Roles","addRoleToInstanceProfile","ensurePoliciesAttached","AttachedPolicies","listAttachedRolePolicies","unattachedPolicies","indexOf","ensureInlinePolicyAttached","policyName","policyDocument","needsUpdating","getRolePolicy","PolicyName","currentPolicyDocument","putRolePolicy","ensureBucketExists","buckets","bucketName","region","find","Name","createBucket","Bucket","CreateBucketConfiguration","LocationConstraint","findBucketWithPrefix","ensureBucketPolicyAttached","error","currentPolicy","Policy","getBucketPolicy","params","putBucketPolicy","ensureCloudWatchRule","description","eventPattern","describeRule","putRule","Description","EventPattern","ensureRuleTargetExists","ruleName","target","Targets","listTargetsByRule","Rule","_target","putTargets","coloredStatusText","envColor","text","green","yellow","red","checkLongEnvSafe","currentConfig","commandHistory","appConfig","optionEnabled","longEnvVars","previouslyMigrated","OptionSettings","Namespace","OptionName","reconfigCount","filter","ranDeploy","migrated","safeToReconfig","enabled","createVersionDescription","getBasePath","path","cwd","stdio","toUTCString","split","slice","ensureSsmDocument","content","getDocument","DocumentVersion","currentContent","Content","replace","createDocument","DocumentType","updateDocument"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport { isEqual } from 'lodash';\nimport os from 'os';\nimport random from 'random-seed';\nimport uuid from 'uuid';\nimport { execSync } from 'child_process';\nimport { beanstalk, cloudWatchEvents, iam, s3, sts, ssm } from './aws';\nimport { getRecheckInterval } from './recheck';\n\nexport function logStep(message) {\n  console.log(chalk.blue(message));\n}\n\nexport function shouldRebuild(bundlePath, useCachedBuild) {\n  if (fs.existsSync(bundlePath) && useCachedBuild) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function tmpBuildPath(appPath, api) {\n  const rand = random.create(appPath);\n  const uuidNumbers = [];\n\n  for (let i = 0; i < 16; i++) {\n    uuidNumbers.push(rand(255));\n  }\n\n  return api.resolvePath(\n    os.tmpdir(),\n    `mup-meteor-${uuid.v4({ random: uuidNumbers })}`\n  );\n}\n\nexport function names(config) {\n  const name = config.app.name.toLowerCase();\n\n  return {\n    bucket: `mup-${name}`,\n    environment: `mup-env-${name}`,\n    app: `mup-${name}`,\n    bundlePrefix: `mup/bundles/${name}/`,\n    instanceProfile: 'aws-elasticbeanstalk-ec2-role',\n    serviceRole: 'aws-elasticbeanstalk-service-role',\n    trailBucketPrefix: 'mup-graceful-shutdown-trail',\n    trailName: 'mup-graceful-shutdown-trail',\n    deregisterRuleName: 'mup-target-deregister',\n    eventTargetRole: `mup-envoke-run-command-${name}`,\n    eventTargetPolicyName: 'Invoke_Run_Command',\n    eventTargetPassRoleName: 'Pass_Role',\n    automationDocument: 'mup-graceful-shutdown'\n  };\n}\n\nexport function createUniqueName(prefix = '') {\n  const randomNumbers = Math.floor(Math.random() * 10000);\n\n  return `${prefix}-${Date.now()}-${randomNumbers}`;\n}\n\nasync function retrieveEnvironmentInfo(api, count) {\n  const config = api.getConfig();\n  const {\n    environment\n  } = names(config);\n\n  const {\n    EnvironmentInfo\n  } = await beanstalk.retrieveEnvironmentInfo({\n    EnvironmentName: environment,\n    InfoType: 'tail'\n  }).promise();\n\n  if (EnvironmentInfo.length > 0) {\n    return EnvironmentInfo;\n  } else if (count > 5) {\n    throw new Error('No logs');\n  }\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      // The logs aren't always available, so retry until they are\n      // Another option is to look for the event that says it is ready\n      retrieveEnvironmentInfo(api, count + 1)\n        .then(resolve)\n        .catch(reject);\n    }, getRecheckInterval());\n  });\n}\n\nexport async function getLogs(api) {\n  const config = api.getConfig();\n  const {\n    environment\n  } = names(config);\n\n  logStep('=> Requesting Logs');\n\n  await beanstalk.requestEnvironmentInfo({\n    EnvironmentName: environment,\n    InfoType: 'tail'\n  }).promise();\n\n  const EnvironmentInfo = await retrieveEnvironmentInfo(api, 0);\n\n  logStep('=> Downloading Logs');\n\n  const logsForServer = EnvironmentInfo.reduce((result, info) => {\n    result[info.Ec2InstanceId] = info.Message;\n\n    return result;\n  }, {});\n\n  return Promise.all(Object.keys(logsForServer).map(key =>\n    new Promise((resolve, reject) => {\n      axios.get(logsForServer[key]).then(({ data }) => {\n        resolve({\n          data,\n          instance: key\n        });\n      }).catch(reject);\n    })));\n}\n\nexport function getNodeVersion(api, bundlePath) {\n  let star = fs.readFileSync(api.resolvePath(bundlePath, 'bundle/star.json')).toString();\n  const nodeVersionTxt = fs.readFileSync(api.resolvePath(bundlePath, 'bundle/.node_version.txt')).toString();\n\n  star = JSON.parse(star);\n\n  if (star.npmVersion) {\n    return {\n      nodeVersion: star.nodeVersion,\n      npmVersion: star.npmVersion\n    };\n  }\n\n  const nodeVersion = nodeVersionTxt.substr(1);\n\n  if (nodeVersion.startsWith('4')) {\n    return {\n      nodeVersion,\n      npmVersion: '4.6.1'\n    };\n  }\n\n  return {\n    nodeVersion,\n    npmVersion: '3.10.5'\n  };\n}\n\nexport async function attachPolicies(config, roleName, policies) {\n  const promises = [];\n\n  policies.forEach((policy) => {\n    const promise = iam.attachRolePolicy({\n      RoleName: roleName,\n      PolicyArn: policy\n    }).promise();\n\n    promises.push(promise);\n  });\n\n  await Promise.all(promises);\n}\n\nexport function getAccountId() {\n  return sts.getCallerIdentity()\n    .promise()\n    .then(({ Account }) => Account);\n}\n\nexport async function ensureRoleExists(name, assumeRolePolicyDocument, ensureAssumeRolePolicy) {\n  let exists = true;\n  let updateAssumeRolePolicy = false;\n\n  try {\n    const { Role } = await iam.getRole({\n      RoleName: name\n    }).promise();\n\n\n    const currentAssumeRolePolicy = decodeURIComponent(Role.AssumeRolePolicyDocument);\n    // Make the whitespace consistent with the current document\n    assumeRolePolicyDocument = JSON.stringify(JSON.parse(assumeRolePolicyDocument));\n\n    if (currentAssumeRolePolicy !== assumeRolePolicyDocument && ensureAssumeRolePolicy) {\n      updateAssumeRolePolicy = true;\n    }\n  } catch (e) {\n    exists = false;\n  }\n\n  if (!exists) {\n    await iam.createRole({\n      RoleName: name,\n      AssumeRolePolicyDocument: assumeRolePolicyDocument\n    }).promise();\n  } else if (updateAssumeRolePolicy) {\n    await iam.updateAssumeRolePolicy({\n      RoleName: name,\n      PolicyDocument: assumeRolePolicyDocument\n    }).promise();\n  }\n}\n\nexport async function ensureInstanceProfileExists(config, name) {\n  let exists = true;\n\n  try {\n    await iam.getInstanceProfile({\n      InstanceProfileName: name\n    }).promise();\n  } catch (e) {\n    exists = false;\n  }\n\n  if (!exists) {\n    await iam.createInstanceProfile({\n      InstanceProfileName: name\n    }).promise();\n  }\n}\n\nexport async function ensureRoleAdded(config, instanceProfile, role) {\n  let added = true;\n\n\n  const {\n    InstanceProfile\n  } = await iam.getInstanceProfile({\n    InstanceProfileName: instanceProfile\n  }).promise();\n\n  if (InstanceProfile.Roles.length === 0 || InstanceProfile.Roles[0].RoleName !== role) {\n    added = false;\n  }\n\n  if (!added) {\n    await iam.addRoleToInstanceProfile({\n      InstanceProfileName: instanceProfile,\n      RoleName: role\n    }).promise();\n  }\n}\n\nexport async function ensurePoliciesAttached(config, role, policies) {\n  let {\n    AttachedPolicies\n  } = await iam.listAttachedRolePolicies({\n    RoleName: role\n  }).promise();\n\n  AttachedPolicies = AttachedPolicies.map(policy => policy.PolicyArn);\n\n  const unattachedPolicies = policies.reduce((result, policy) => {\n    if (AttachedPolicies.indexOf(policy) === -1) {\n      result.push(policy);\n    }\n\n    return result;\n  }, []);\n\n  if (unattachedPolicies.length > 0) {\n    await attachPolicies(config, role, unattachedPolicies);\n  }\n}\n\nexport async function ensureInlinePolicyAttached(role, policyName, policyDocument) {\n  let exists = true;\n  let needsUpdating = false;\n\n  try {\n    const result = await iam.getRolePolicy({\n      RoleName: role,\n      PolicyName: policyName\n    }).promise();\n    const currentPolicyDocument = decodeURIComponent(result.PolicyDocument);\n\n    if (currentPolicyDocument !== policyDocument) {\n      needsUpdating = true;\n    }\n  } catch (e) {\n    exists = false;\n  }\n\n  if (!exists || needsUpdating) {\n    await iam.putRolePolicy({\n      RoleName: role,\n      PolicyName: policyName,\n      PolicyDocument: policyDocument\n    }).promise();\n  }\n}\n\nexport async function ensureBucketExists(buckets, bucketName, region) {\n  if (!buckets.find(bucket => bucket.Name === bucketName)) {\n    await s3.createBucket({\n      Bucket: bucketName,\n      ...(region ? {\n        CreateBucketConfiguration: {\n          LocationConstraint: region\n        }\n      } : {})\n    }).promise();\n\n    return true;\n  }\n}\n\nexport function findBucketWithPrefix(buckets, prefix) {\n  return buckets.find(bucket => bucket.Name.indexOf(prefix) === 0);\n}\n\nexport async function ensureBucketPolicyAttached(bucketName, policy) {\n  let error = false;\n  let currentPolicy;\n\n  try {\n    const { Policy } = await s3.getBucketPolicy({ Bucket: bucketName }).promise();\n    currentPolicy = Policy;\n  } catch (e) {\n    error = true;\n  }\n\n  if (error || currentPolicy !== policy) {\n    const params = {\n      Bucket: bucketName,\n      Policy: policy\n    };\n\n    await s3.putBucketPolicy(params).promise();\n  }\n}\n\nexport async function ensureCloudWatchRule(name, description, eventPattern) {\n  let error = false;\n\n  try {\n    await cloudWatchEvents.describeRule({ Name: name }).promise();\n  } catch (e) {\n    error = true;\n  }\n\n  if (error) {\n    await cloudWatchEvents.putRule({\n      Name: name,\n      Description: description,\n      EventPattern: eventPattern\n    }).promise();\n\n    return true;\n  }\n\n  return false;\n}\n\nexport async function ensureRuleTargetExists(ruleName, target) {\n  const {\n    Targets\n  } = await cloudWatchEvents.listTargetsByRule({\n    Rule: ruleName\n  }).promise();\n\n  if (!Targets.find(_target => isEqual(_target, target))) {\n    const params = {\n      Rule: ruleName,\n      Targets: [target]\n    };\n    await cloudWatchEvents.putTargets(params).promise();\n\n    return true;\n  }\n}\n\nexport function coloredStatusText(envColor, text) {\n  if (envColor === 'Green') {\n    return chalk.green(text);\n  } else if (envColor === 'Yellow') {\n    return chalk.yellow(text);\n  } else if (envColor === 'Red') {\n    return chalk.red(text);\n  }\n  return text;\n}\n\n\n// Checks if it is safe to use the environment variables from s3\nexport function checkLongEnvSafe(currentConfig, commandHistory, appConfig) {\n  const optionEnabled = appConfig.longEnvVars;\n  const previouslyMigrated = currentConfig[0].OptionSettings.find(({ Namespace, OptionName }) => Namespace === 'aws:elasticbeanstalk:application:environment' &&\n      OptionName === 'MUP_ENV_FILE_VERSION');\n  const reconfigCount = commandHistory.filter(({ name }) => name === 'beanstalk.reconfig').length;\n  const ranDeploy = commandHistory.find(({ name }) => name === 'beanstalk.deploy') && reconfigCount > 1;\n\n  return {\n    migrated: previouslyMigrated,\n    safeToReconfig: optionEnabled && (previouslyMigrated || ranDeploy),\n    enabled: optionEnabled\n  };\n}\n\nexport function createVersionDescription(api, appConfig) {\n  const appPath = api.resolvePath(api.getBasePath(), appConfig.path);\n  let description = '';\n\n  try {\n    description = execSync('git log -1 --pretty=%B', {\n      cwd: appPath,\n      stdio: 'pipe'\n    }).toString();\n  } catch (e) {\n    description = `Deployed by Mup on ${new Date().toUTCString()}`;\n  }\n  return description.split('\\n')[0].slice(0, 195);\n}\n\nexport async function ensureSsmDocument(name, content) {\n  let exists = true;\n  let needsUpdating = false;\n\n  try {\n    const result = await ssm.getDocument({ Name: name, DocumentVersion: '$LATEST' }).promise();\n    // If the document was created or edited on the AWS console, there is extra new\n    // line characters and whitespace\n    const currentContent = JSON.stringify(JSON.parse(result.Content.replace(/\\r?\\n|\\r/g, '')));\n    if (currentContent !== content) {\n      needsUpdating = true;\n    }\n  } catch (e) {\n    exists = false;\n  }\n\n  if (!exists) {\n    await ssm.createDocument({\n      Content: content,\n      Name: name,\n      DocumentType: 'Automation'\n    }).promise();\n\n    return true;\n  } else if (needsUpdating) {\n    await ssm.updateDocument({\n      Content: content,\n      Name: name,\n      DocumentVersion: '$LATEST'\n    }).promise();\n  }\n}\n"],"file":"utils.js"}